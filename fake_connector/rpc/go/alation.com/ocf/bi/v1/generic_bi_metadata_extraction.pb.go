// Copyright 2015 The gRPC Authors
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
//     http://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.6.1
// source: generic_bi_metadata_extraction.proto

package v1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type GBMBIReport_Type int32

const (
	GBMBIReport_SIMPLE    GBMBIReport_Type = 0
	GBMBIReport_DASHBOARD GBMBIReport_Type = 1
)

// Enum value maps for GBMBIReport_Type.
var (
	GBMBIReport_Type_name = map[int32]string{
		0: "SIMPLE",
		1: "DASHBOARD",
	}
	GBMBIReport_Type_value = map[string]int32{
		"SIMPLE":    0,
		"DASHBOARD": 1,
	}
)

func (x GBMBIReport_Type) Enum() *GBMBIReport_Type {
	p := new(GBMBIReport_Type)
	*p = x
	return p
}

func (x GBMBIReport_Type) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (GBMBIReport_Type) Descriptor() protoreflect.EnumDescriptor {
	return file_generic_bi_metadata_extraction_proto_enumTypes[0].Descriptor()
}

func (GBMBIReport_Type) Type() protoreflect.EnumType {
	return &file_generic_bi_metadata_extraction_proto_enumTypes[0]
}

func (x GBMBIReport_Type) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use GBMBIReport_Type.Descriptor instead.
func (GBMBIReport_Type) EnumDescriptor() ([]byte, []int) {
	return file_generic_bi_metadata_extraction_proto_rawDescGZIP(), []int{10, 0}
}

type GBMBIConnection_Type int32

const (
	GBMBIConnection_FILES     GBMBIConnection_Type = 0
	GBMBIConnection_TABLE     GBMBIConnection_Type = 1
	GBMBIConnection_SQL_QUERY GBMBIConnection_Type = 2
	GBMBIConnection_OTHER     GBMBIConnection_Type = 3
)

// Enum value maps for GBMBIConnection_Type.
var (
	GBMBIConnection_Type_name = map[int32]string{
		0: "FILES",
		1: "TABLE",
		2: "SQL_QUERY",
		3: "OTHER",
	}
	GBMBIConnection_Type_value = map[string]int32{
		"FILES":     0,
		"TABLE":     1,
		"SQL_QUERY": 2,
		"OTHER":     3,
	}
)

func (x GBMBIConnection_Type) Enum() *GBMBIConnection_Type {
	p := new(GBMBIConnection_Type)
	*p = x
	return p
}

func (x GBMBIConnection_Type) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (GBMBIConnection_Type) Descriptor() protoreflect.EnumDescriptor {
	return file_generic_bi_metadata_extraction_proto_enumTypes[1].Descriptor()
}

func (GBMBIConnection_Type) Type() protoreflect.EnumType {
	return &file_generic_bi_metadata_extraction_proto_enumTypes[1]
}

func (x GBMBIConnection_Type) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use GBMBIConnection_Type.Descriptor instead.
func (GBMBIConnection_Type) EnumDescriptor() ([]byte, []int) {
	return file_generic_bi_metadata_extraction_proto_rawDescGZIP(), []int{12, 0}
}

type GBMBIConfigurationParameter struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key   string `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`
	Value string `protobuf:"bytes,2,opt,name=value,proto3" json:"value,omitempty"`
}

func (x *GBMBIConfigurationParameter) Reset() {
	*x = GBMBIConfigurationParameter{}
	if protoimpl.UnsafeEnabled {
		mi := &file_generic_bi_metadata_extraction_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GBMBIConfigurationParameter) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GBMBIConfigurationParameter) ProtoMessage() {}

func (x *GBMBIConfigurationParameter) ProtoReflect() protoreflect.Message {
	mi := &file_generic_bi_metadata_extraction_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GBMBIConfigurationParameter.ProtoReflect.Descriptor instead.
func (*GBMBIConfigurationParameter) Descriptor() ([]byte, []int) {
	return file_generic_bi_metadata_extraction_proto_rawDescGZIP(), []int{0}
}

func (x *GBMBIConfigurationParameter) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *GBMBIConfigurationParameter) GetValue() string {
	if x != nil {
		return x.Value
	}
	return ""
}

type GBMBIConfiguration struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Parameters []*GBMBIConfigurationParameter `protobuf:"bytes,1,rep,name=parameters,proto3" json:"parameters,omitempty"`
}

func (x *GBMBIConfiguration) Reset() {
	*x = GBMBIConfiguration{}
	if protoimpl.UnsafeEnabled {
		mi := &file_generic_bi_metadata_extraction_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GBMBIConfiguration) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GBMBIConfiguration) ProtoMessage() {}

func (x *GBMBIConfiguration) ProtoReflect() protoreflect.Message {
	mi := &file_generic_bi_metadata_extraction_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GBMBIConfiguration.ProtoReflect.Descriptor instead.
func (*GBMBIConfiguration) Descriptor() ([]byte, []int) {
	return file_generic_bi_metadata_extraction_proto_rawDescGZIP(), []int{1}
}

func (x *GBMBIConfiguration) GetParameters() []*GBMBIConfigurationParameter {
	if x != nil {
		return x.Parameters
	}
	return nil
}

type VerifyConfigurationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Configuration *GBMBIConfiguration `protobuf:"bytes,1,opt,name=configuration,proto3" json:"configuration,omitempty"`
}

func (x *VerifyConfigurationRequest) Reset() {
	*x = VerifyConfigurationRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_generic_bi_metadata_extraction_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *VerifyConfigurationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*VerifyConfigurationRequest) ProtoMessage() {}

func (x *VerifyConfigurationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_generic_bi_metadata_extraction_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use VerifyConfigurationRequest.ProtoReflect.Descriptor instead.
func (*VerifyConfigurationRequest) Descriptor() ([]byte, []int) {
	return file_generic_bi_metadata_extraction_proto_rawDescGZIP(), []int{2}
}

func (x *VerifyConfigurationRequest) GetConfiguration() *GBMBIConfiguration {
	if x != nil {
		return x.Configuration
	}
	return nil
}

type ListFileSystemRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Configuration *GBMBIConfiguration `protobuf:"bytes,1,opt,name=configuration,proto3" json:"configuration,omitempty"`
	Users         []*AlationUser      `protobuf:"bytes,2,rep,name=users,proto3" json:"users,omitempty"`
}

func (x *ListFileSystemRequest) Reset() {
	*x = ListFileSystemRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_generic_bi_metadata_extraction_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ListFileSystemRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListFileSystemRequest) ProtoMessage() {}

func (x *ListFileSystemRequest) ProtoReflect() protoreflect.Message {
	mi := &file_generic_bi_metadata_extraction_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListFileSystemRequest.ProtoReflect.Descriptor instead.
func (*ListFileSystemRequest) Descriptor() ([]byte, []int) {
	return file_generic_bi_metadata_extraction_proto_rawDescGZIP(), []int{3}
}

func (x *ListFileSystemRequest) GetConfiguration() *GBMBIConfiguration {
	if x != nil {
		return x.Configuration
	}
	return nil
}

func (x *ListFileSystemRequest) GetUsers() []*AlationUser {
	if x != nil {
		return x.Users
	}
	return nil
}

type RunFullExtractionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Configuration   *GBMBIConfiguration `protobuf:"bytes,1,opt,name=configuration,proto3" json:"configuration,omitempty"`
	Folders         []*GBMBIFolder      `protobuf:"bytes,2,rep,name=folders,proto3" json:"folders,omitempty"`
	IsIncludeFilter bool                `protobuf:"varint,3,opt,name=isIncludeFilter,proto3" json:"isIncludeFilter,omitempty"`
	Users           []*AlationUser      `protobuf:"bytes,4,rep,name=users,proto3" json:"users,omitempty"`
}

func (x *RunFullExtractionRequest) Reset() {
	*x = RunFullExtractionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_generic_bi_metadata_extraction_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RunFullExtractionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RunFullExtractionRequest) ProtoMessage() {}

func (x *RunFullExtractionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_generic_bi_metadata_extraction_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RunFullExtractionRequest.ProtoReflect.Descriptor instead.
func (*RunFullExtractionRequest) Descriptor() ([]byte, []int) {
	return file_generic_bi_metadata_extraction_proto_rawDescGZIP(), []int{4}
}

func (x *RunFullExtractionRequest) GetConfiguration() *GBMBIConfiguration {
	if x != nil {
		return x.Configuration
	}
	return nil
}

func (x *RunFullExtractionRequest) GetFolders() []*GBMBIFolder {
	if x != nil {
		return x.Folders
	}
	return nil
}

func (x *RunFullExtractionRequest) GetIsIncludeFilter() bool {
	if x != nil {
		return x.IsIncludeFilter
	}
	return false
}

func (x *RunFullExtractionRequest) GetUsers() []*AlationUser {
	if x != nil {
		return x.Users
	}
	return nil
}

// A PropagateCertificationRequest is made whenever an object get an endorsement, warning or deprecation.
type PropagateCertificationRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Configuration *GBMBIConfiguration `protobuf:"bytes,1,opt,name=configuration,proto3" json:"configuration,omitempty"`
	BiObject      *GBMBIObject        `protobuf:"bytes,2,opt,name=biObject,proto3" json:"biObject,omitempty"`
	// If certify is true, then it contains the concatenation of all the endorsements.
	// If certify is false, then it contains the deprecation or warning message from the flag.
	Note string `protobuf:"bytes,3,opt,name=note,proto3" json:"note,omitempty"`
	// Set to true, if the object has only endorsements without any deprecations or warnings.
	Certify bool `protobuf:"varint,4,opt,name=certify,proto3" json:"certify,omitempty"`
}

func (x *PropagateCertificationRequest) Reset() {
	*x = PropagateCertificationRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_generic_bi_metadata_extraction_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *PropagateCertificationRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PropagateCertificationRequest) ProtoMessage() {}

func (x *PropagateCertificationRequest) ProtoReflect() protoreflect.Message {
	mi := &file_generic_bi_metadata_extraction_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PropagateCertificationRequest.ProtoReflect.Descriptor instead.
func (*PropagateCertificationRequest) Descriptor() ([]byte, []int) {
	return file_generic_bi_metadata_extraction_proto_rawDescGZIP(), []int{5}
}

func (x *PropagateCertificationRequest) GetConfiguration() *GBMBIConfiguration {
	if x != nil {
		return x.Configuration
	}
	return nil
}

func (x *PropagateCertificationRequest) GetBiObject() *GBMBIObject {
	if x != nil {
		return x.BiObject
	}
	return nil
}

func (x *PropagateCertificationRequest) GetNote() string {
	if x != nil {
		return x.Note
	}
	return ""
}

func (x *PropagateCertificationRequest) GetCertify() bool {
	if x != nil {
		return x.Certify
	}
	return false
}

type BIObjectResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to BiObjectResponse:
	//	*BIObjectResponse_BiUser
	//	*BIObjectResponse_BiFolder
	//	*BIObjectResponse_BiReport
	//	*BIObjectResponse_BiDataSource
	//	*BIObjectResponse_BiConnection
	//	*BIObjectResponse_BiReportColumn
	//	*BIObjectResponse_BiDatasourceColumn
	//	*BIObjectResponse_BiConnectionColumn
	//	*BIObjectResponse_BiPermission
	//	*BIObjectResponse_BiImage
	BiObjectResponse isBIObjectResponse_BiObjectResponse `protobuf_oneof:"biObjectResponse"`
}

func (x *BIObjectResponse) Reset() {
	*x = BIObjectResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_generic_bi_metadata_extraction_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *BIObjectResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*BIObjectResponse) ProtoMessage() {}

func (x *BIObjectResponse) ProtoReflect() protoreflect.Message {
	mi := &file_generic_bi_metadata_extraction_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use BIObjectResponse.ProtoReflect.Descriptor instead.
func (*BIObjectResponse) Descriptor() ([]byte, []int) {
	return file_generic_bi_metadata_extraction_proto_rawDescGZIP(), []int{6}
}

func (m *BIObjectResponse) GetBiObjectResponse() isBIObjectResponse_BiObjectResponse {
	if m != nil {
		return m.BiObjectResponse
	}
	return nil
}

func (x *BIObjectResponse) GetBiUser() *GBMBIUser {
	if x, ok := x.GetBiObjectResponse().(*BIObjectResponse_BiUser); ok {
		return x.BiUser
	}
	return nil
}

func (x *BIObjectResponse) GetBiFolder() *GBMBIFolder {
	if x, ok := x.GetBiObjectResponse().(*BIObjectResponse_BiFolder); ok {
		return x.BiFolder
	}
	return nil
}

func (x *BIObjectResponse) GetBiReport() *GBMBIReport {
	if x, ok := x.GetBiObjectResponse().(*BIObjectResponse_BiReport); ok {
		return x.BiReport
	}
	return nil
}

func (x *BIObjectResponse) GetBiDataSource() *GBMBIDatasource {
	if x, ok := x.GetBiObjectResponse().(*BIObjectResponse_BiDataSource); ok {
		return x.BiDataSource
	}
	return nil
}

func (x *BIObjectResponse) GetBiConnection() *GBMBIConnection {
	if x, ok := x.GetBiObjectResponse().(*BIObjectResponse_BiConnection); ok {
		return x.BiConnection
	}
	return nil
}

func (x *BIObjectResponse) GetBiReportColumn() *GBMBIReportColumn {
	if x, ok := x.GetBiObjectResponse().(*BIObjectResponse_BiReportColumn); ok {
		return x.BiReportColumn
	}
	return nil
}

func (x *BIObjectResponse) GetBiDatasourceColumn() *GBMBIDatasourceColumn {
	if x, ok := x.GetBiObjectResponse().(*BIObjectResponse_BiDatasourceColumn); ok {
		return x.BiDatasourceColumn
	}
	return nil
}

func (x *BIObjectResponse) GetBiConnectionColumn() *GBMBIConnectionColumn {
	if x, ok := x.GetBiObjectResponse().(*BIObjectResponse_BiConnectionColumn); ok {
		return x.BiConnectionColumn
	}
	return nil
}

func (x *BIObjectResponse) GetBiPermission() *GBMBIPermission {
	if x, ok := x.GetBiObjectResponse().(*BIObjectResponse_BiPermission); ok {
		return x.BiPermission
	}
	return nil
}

func (x *BIObjectResponse) GetBiImage() *GBMBIImage {
	if x, ok := x.GetBiObjectResponse().(*BIObjectResponse_BiImage); ok {
		return x.BiImage
	}
	return nil
}

type isBIObjectResponse_BiObjectResponse interface {
	isBIObjectResponse_BiObjectResponse()
}

type BIObjectResponse_BiUser struct {
	BiUser *GBMBIUser `protobuf:"bytes,1,opt,name=biUser,proto3,oneof"`
}

type BIObjectResponse_BiFolder struct {
	BiFolder *GBMBIFolder `protobuf:"bytes,2,opt,name=biFolder,proto3,oneof"`
}

type BIObjectResponse_BiReport struct {
	BiReport *GBMBIReport `protobuf:"bytes,3,opt,name=biReport,proto3,oneof"`
}

type BIObjectResponse_BiDataSource struct {
	BiDataSource *GBMBIDatasource `protobuf:"bytes,4,opt,name=biDataSource,proto3,oneof"`
}

type BIObjectResponse_BiConnection struct {
	BiConnection *GBMBIConnection `protobuf:"bytes,5,opt,name=biConnection,proto3,oneof"`
}

type BIObjectResponse_BiReportColumn struct {
	BiReportColumn *GBMBIReportColumn `protobuf:"bytes,6,opt,name=biReportColumn,proto3,oneof"`
}

type BIObjectResponse_BiDatasourceColumn struct {
	BiDatasourceColumn *GBMBIDatasourceColumn `protobuf:"bytes,7,opt,name=biDatasourceColumn,proto3,oneof"`
}

type BIObjectResponse_BiConnectionColumn struct {
	BiConnectionColumn *GBMBIConnectionColumn `protobuf:"bytes,8,opt,name=biConnectionColumn,proto3,oneof"`
}

type BIObjectResponse_BiPermission struct {
	BiPermission *GBMBIPermission `protobuf:"bytes,9,opt,name=biPermission,proto3,oneof"`
}

type BIObjectResponse_BiImage struct {
	BiImage *GBMBIImage `protobuf:"bytes,10,opt,name=biImage,proto3,oneof"`
}

func (*BIObjectResponse_BiUser) isBIObjectResponse_BiObjectResponse() {}

func (*BIObjectResponse_BiFolder) isBIObjectResponse_BiObjectResponse() {}

func (*BIObjectResponse_BiReport) isBIObjectResponse_BiObjectResponse() {}

func (*BIObjectResponse_BiDataSource) isBIObjectResponse_BiObjectResponse() {}

func (*BIObjectResponse_BiConnection) isBIObjectResponse_BiObjectResponse() {}

func (*BIObjectResponse_BiReportColumn) isBIObjectResponse_BiObjectResponse() {}

func (*BIObjectResponse_BiDatasourceColumn) isBIObjectResponse_BiObjectResponse() {}

func (*BIObjectResponse_BiConnectionColumn) isBIObjectResponse_BiObjectResponse() {}

func (*BIObjectResponse_BiPermission) isBIObjectResponse_BiObjectResponse() {}

func (*BIObjectResponse_BiImage) isBIObjectResponse_BiObjectResponse() {}

//
// Base model class for all BI entities
//
// Refer to
// https://confluence.alationdata.com/pages/viewpage.action?pageId=333355571#SimplifyingGenericBIModels(GBM)-NewGBMmodels
//
type GBMBIObject struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id             string            `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Name           string            `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	BiObjectType   string            `protobuf:"bytes,3,opt,name=biObjectType,proto3" json:"biObjectType,omitempty"`
	Description    string            `protobuf:"bytes,4,opt,name=description,proto3" json:"description,omitempty"`
	CreatedAt      string            `protobuf:"bytes,5,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	LastUpdated    string            `protobuf:"bytes,6,opt,name=lastUpdated,proto3" json:"lastUpdated,omitempty"`
	SourceUrl      string            `protobuf:"bytes,7,opt,name=source_url,json=sourceUrl,proto3" json:"source_url,omitempty"`
	BiCompositeKey map[string]string `protobuf:"bytes,8,rep,name=biCompositeKey,proto3" json:"biCompositeKey,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
}

func (x *GBMBIObject) Reset() {
	*x = GBMBIObject{}
	if protoimpl.UnsafeEnabled {
		mi := &file_generic_bi_metadata_extraction_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GBMBIObject) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GBMBIObject) ProtoMessage() {}

func (x *GBMBIObject) ProtoReflect() protoreflect.Message {
	mi := &file_generic_bi_metadata_extraction_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GBMBIObject.ProtoReflect.Descriptor instead.
func (*GBMBIObject) Descriptor() ([]byte, []int) {
	return file_generic_bi_metadata_extraction_proto_rawDescGZIP(), []int{7}
}

func (x *GBMBIObject) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *GBMBIObject) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GBMBIObject) GetBiObjectType() string {
	if x != nil {
		return x.BiObjectType
	}
	return ""
}

func (x *GBMBIObject) GetDescription() string {
	if x != nil {
		return x.Description
	}
	return ""
}

func (x *GBMBIObject) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *GBMBIObject) GetLastUpdated() string {
	if x != nil {
		return x.LastUpdated
	}
	return ""
}

func (x *GBMBIObject) GetSourceUrl() string {
	if x != nil {
		return x.SourceUrl
	}
	return ""
}

func (x *GBMBIObject) GetBiCompositeKey() map[string]string {
	if x != nil {
		return x.BiCompositeKey
	}
	return nil
}

type GBMBIUser struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BiObject *GBMBIObject `protobuf:"bytes,1,opt,name=biObject,proto3" json:"biObject,omitempty"`
	// The username of the Alation user, that matches this BI user.
	// If an Alation user matches a BI user, they can view all the objects, accessible by the BI user.
	Username string `protobuf:"bytes,2,opt,name=username,proto3" json:"username,omitempty"`
}

func (x *GBMBIUser) Reset() {
	*x = GBMBIUser{}
	if protoimpl.UnsafeEnabled {
		mi := &file_generic_bi_metadata_extraction_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GBMBIUser) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GBMBIUser) ProtoMessage() {}

func (x *GBMBIUser) ProtoReflect() protoreflect.Message {
	mi := &file_generic_bi_metadata_extraction_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GBMBIUser.ProtoReflect.Descriptor instead.
func (*GBMBIUser) Descriptor() ([]byte, []int) {
	return file_generic_bi_metadata_extraction_proto_rawDescGZIP(), []int{8}
}

func (x *GBMBIUser) GetBiObject() *GBMBIObject {
	if x != nil {
		return x.BiObject
	}
	return nil
}

func (x *GBMBIUser) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

type GBMBIFolder struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BiObject          *GBMBIObject `protobuf:"bytes,1,opt,name=biObject,proto3" json:"biObject,omitempty"`
	Owner             string       `protobuf:"bytes,2,opt,name=owner,proto3" json:"owner,omitempty"`
	NumReports        int32        `protobuf:"varint,3,opt,name=numReports,proto3" json:"numReports,omitempty"`
	NumReportAccesses int32        `protobuf:"varint,4,opt,name=numReportAccesses,proto3" json:"numReportAccesses,omitempty"`
	ParentFolderId    string       `protobuf:"bytes,5,opt,name=parentFolderId,proto3" json:"parentFolderId,omitempty"`
	IsExtractable     bool         `protobuf:"varint,6,opt,name=isExtractable,proto3" json:"isExtractable,omitempty"`
}

func (x *GBMBIFolder) Reset() {
	*x = GBMBIFolder{}
	if protoimpl.UnsafeEnabled {
		mi := &file_generic_bi_metadata_extraction_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GBMBIFolder) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GBMBIFolder) ProtoMessage() {}

func (x *GBMBIFolder) ProtoReflect() protoreflect.Message {
	mi := &file_generic_bi_metadata_extraction_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GBMBIFolder.ProtoReflect.Descriptor instead.
func (*GBMBIFolder) Descriptor() ([]byte, []int) {
	return file_generic_bi_metadata_extraction_proto_rawDescGZIP(), []int{9}
}

func (x *GBMBIFolder) GetBiObject() *GBMBIObject {
	if x != nil {
		return x.BiObject
	}
	return nil
}

func (x *GBMBIFolder) GetOwner() string {
	if x != nil {
		return x.Owner
	}
	return ""
}

func (x *GBMBIFolder) GetNumReports() int32 {
	if x != nil {
		return x.NumReports
	}
	return 0
}

func (x *GBMBIFolder) GetNumReportAccesses() int32 {
	if x != nil {
		return x.NumReportAccesses
	}
	return 0
}

func (x *GBMBIFolder) GetParentFolderId() string {
	if x != nil {
		return x.ParentFolderId
	}
	return ""
}

func (x *GBMBIFolder) GetIsExtractable() bool {
	if x != nil {
		return x.IsExtractable
	}
	return false
}

type GBMBIReport struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BiObject        *GBMBIObject     `protobuf:"bytes,1,opt,name=biObject,proto3" json:"biObject,omitempty"`
	Owner           string           `protobuf:"bytes,2,opt,name=owner,proto3" json:"owner,omitempty"`
	NumAccesses     int32            `protobuf:"varint,3,opt,name=numAccesses,proto3" json:"numAccesses,omitempty"`
	ParentFolderId  string           `protobuf:"bytes,4,opt,name=parentFolderId,proto3" json:"parentFolderId,omitempty"`
	ParentReportIds []string         `protobuf:"bytes,5,rep,name=parentReportIds,proto3" json:"parentReportIds,omitempty"`
	DatasourceIds   []string         `protobuf:"bytes,6,rep,name=datasourceIds,proto3" json:"datasourceIds,omitempty"`
	Type            GBMBIReport_Type `protobuf:"varint,7,opt,name=type,proto3,enum=gbm.GBMBIReport_Type" json:"type,omitempty"`
}

func (x *GBMBIReport) Reset() {
	*x = GBMBIReport{}
	if protoimpl.UnsafeEnabled {
		mi := &file_generic_bi_metadata_extraction_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GBMBIReport) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GBMBIReport) ProtoMessage() {}

func (x *GBMBIReport) ProtoReflect() protoreflect.Message {
	mi := &file_generic_bi_metadata_extraction_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GBMBIReport.ProtoReflect.Descriptor instead.
func (*GBMBIReport) Descriptor() ([]byte, []int) {
	return file_generic_bi_metadata_extraction_proto_rawDescGZIP(), []int{10}
}

func (x *GBMBIReport) GetBiObject() *GBMBIObject {
	if x != nil {
		return x.BiObject
	}
	return nil
}

func (x *GBMBIReport) GetOwner() string {
	if x != nil {
		return x.Owner
	}
	return ""
}

func (x *GBMBIReport) GetNumAccesses() int32 {
	if x != nil {
		return x.NumAccesses
	}
	return 0
}

func (x *GBMBIReport) GetParentFolderId() string {
	if x != nil {
		return x.ParentFolderId
	}
	return ""
}

func (x *GBMBIReport) GetParentReportIds() []string {
	if x != nil {
		return x.ParentReportIds
	}
	return nil
}

func (x *GBMBIReport) GetDatasourceIds() []string {
	if x != nil {
		return x.DatasourceIds
	}
	return nil
}

func (x *GBMBIReport) GetType() GBMBIReport_Type {
	if x != nil {
		return x.Type
	}
	return GBMBIReport_SIMPLE
}

type GBMBIDatasource struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BiObject       *GBMBIObject `protobuf:"bytes,1,opt,name=biObject,proto3" json:"biObject,omitempty"`
	Owner          string       `protobuf:"bytes,2,opt,name=owner,proto3" json:"owner,omitempty"`
	ParentFolderId string       `protobuf:"bytes,3,opt,name=parentFolderId,proto3" json:"parentFolderId,omitempty"`
	ConnectionIds  []string     `protobuf:"bytes,4,rep,name=connectionIds,proto3" json:"connectionIds,omitempty"`
}

func (x *GBMBIDatasource) Reset() {
	*x = GBMBIDatasource{}
	if protoimpl.UnsafeEnabled {
		mi := &file_generic_bi_metadata_extraction_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GBMBIDatasource) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GBMBIDatasource) ProtoMessage() {}

func (x *GBMBIDatasource) ProtoReflect() protoreflect.Message {
	mi := &file_generic_bi_metadata_extraction_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GBMBIDatasource.ProtoReflect.Descriptor instead.
func (*GBMBIDatasource) Descriptor() ([]byte, []int) {
	return file_generic_bi_metadata_extraction_proto_rawDescGZIP(), []int{11}
}

func (x *GBMBIDatasource) GetBiObject() *GBMBIObject {
	if x != nil {
		return x.BiObject
	}
	return nil
}

func (x *GBMBIDatasource) GetOwner() string {
	if x != nil {
		return x.Owner
	}
	return ""
}

func (x *GBMBIDatasource) GetParentFolderId() string {
	if x != nil {
		return x.ParentFolderId
	}
	return ""
}

func (x *GBMBIDatasource) GetConnectionIds() []string {
	if x != nil {
		return x.ConnectionIds
	}
	return nil
}

type GBMBIConnection struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BiObject              *GBMBIObject         `protobuf:"bytes,1,opt,name=biObject,proto3" json:"biObject,omitempty"`
	ParentFolderId        string               `protobuf:"bytes,2,opt,name=parentFolderId,proto3" json:"parentFolderId,omitempty"`
	ConnectionType        GBMBIConnection_Type `protobuf:"varint,3,opt,name=connectionType,proto3,enum=gbm.GBMBIConnection_Type" json:"connectionType,omitempty"`
	DisplayConnectionType string               `protobuf:"bytes,4,opt,name=displayConnectionType,proto3" json:"displayConnectionType,omitempty"`
	DatabaseType          string               `protobuf:"bytes,5,opt,name=databaseType,proto3" json:"databaseType,omitempty"`
	Host                  string               `protobuf:"bytes,6,opt,name=host,proto3" json:"host,omitempty"`
	Port                  string               `protobuf:"bytes,7,opt,name=port,proto3" json:"port,omitempty"`
	DbSchema              string               `protobuf:"bytes,8,opt,name=dbSchema,proto3" json:"dbSchema,omitempty"`
	DbTable               string               `protobuf:"bytes,9,opt,name=dbTable,proto3" json:"dbTable,omitempty"`
	Sql                   string               `protobuf:"bytes,10,opt,name=sql,proto3" json:"sql,omitempty"`
	DataFiles             []string             `protobuf:"bytes,11,rep,name=dataFiles,proto3" json:"dataFiles,omitempty"`
}

func (x *GBMBIConnection) Reset() {
	*x = GBMBIConnection{}
	if protoimpl.UnsafeEnabled {
		mi := &file_generic_bi_metadata_extraction_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GBMBIConnection) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GBMBIConnection) ProtoMessage() {}

func (x *GBMBIConnection) ProtoReflect() protoreflect.Message {
	mi := &file_generic_bi_metadata_extraction_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GBMBIConnection.ProtoReflect.Descriptor instead.
func (*GBMBIConnection) Descriptor() ([]byte, []int) {
	return file_generic_bi_metadata_extraction_proto_rawDescGZIP(), []int{12}
}

func (x *GBMBIConnection) GetBiObject() *GBMBIObject {
	if x != nil {
		return x.BiObject
	}
	return nil
}

func (x *GBMBIConnection) GetParentFolderId() string {
	if x != nil {
		return x.ParentFolderId
	}
	return ""
}

func (x *GBMBIConnection) GetConnectionType() GBMBIConnection_Type {
	if x != nil {
		return x.ConnectionType
	}
	return GBMBIConnection_FILES
}

func (x *GBMBIConnection) GetDisplayConnectionType() string {
	if x != nil {
		return x.DisplayConnectionType
	}
	return ""
}

func (x *GBMBIConnection) GetDatabaseType() string {
	if x != nil {
		return x.DatabaseType
	}
	return ""
}

func (x *GBMBIConnection) GetHost() string {
	if x != nil {
		return x.Host
	}
	return ""
}

func (x *GBMBIConnection) GetPort() string {
	if x != nil {
		return x.Port
	}
	return ""
}

func (x *GBMBIConnection) GetDbSchema() string {
	if x != nil {
		return x.DbSchema
	}
	return ""
}

func (x *GBMBIConnection) GetDbTable() string {
	if x != nil {
		return x.DbTable
	}
	return ""
}

func (x *GBMBIConnection) GetSql() string {
	if x != nil {
		return x.Sql
	}
	return ""
}

func (x *GBMBIConnection) GetDataFiles() []string {
	if x != nil {
		return x.DataFiles
	}
	return nil
}

type GBMBIColumnBase struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BiObject   *GBMBIObject `protobuf:"bytes,1,opt,name=biObject,proto3" json:"biObject,omitempty"`
	DataType   string       `protobuf:"bytes,2,opt,name=dataType,proto3" json:"dataType,omitempty"`
	Role       string       `protobuf:"bytes,3,opt,name=role,proto3" json:"role,omitempty"`
	Expression string       `protobuf:"bytes,4,opt,name=expression,proto3" json:"expression,omitempty"`
	Values     []string     `protobuf:"bytes,5,rep,name=values,proto3" json:"values,omitempty"`
}

func (x *GBMBIColumnBase) Reset() {
	*x = GBMBIColumnBase{}
	if protoimpl.UnsafeEnabled {
		mi := &file_generic_bi_metadata_extraction_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GBMBIColumnBase) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GBMBIColumnBase) ProtoMessage() {}

func (x *GBMBIColumnBase) ProtoReflect() protoreflect.Message {
	mi := &file_generic_bi_metadata_extraction_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GBMBIColumnBase.ProtoReflect.Descriptor instead.
func (*GBMBIColumnBase) Descriptor() ([]byte, []int) {
	return file_generic_bi_metadata_extraction_proto_rawDescGZIP(), []int{13}
}

func (x *GBMBIColumnBase) GetBiObject() *GBMBIObject {
	if x != nil {
		return x.BiObject
	}
	return nil
}

func (x *GBMBIColumnBase) GetDataType() string {
	if x != nil {
		return x.DataType
	}
	return ""
}

func (x *GBMBIColumnBase) GetRole() string {
	if x != nil {
		return x.Role
	}
	return ""
}

func (x *GBMBIColumnBase) GetExpression() string {
	if x != nil {
		return x.Expression
	}
	return ""
}

func (x *GBMBIColumnBase) GetValues() []string {
	if x != nil {
		return x.Values
	}
	return nil
}

type GBMBIReportColumn struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BiColumnBase        *GBMBIColumnBase `protobuf:"bytes,1,opt,name=biColumnBase,proto3" json:"biColumnBase,omitempty"`
	ReportId            string           `protobuf:"bytes,2,opt,name=reportId,proto3" json:"reportId,omitempty"`
	DatasourceColumnIds []string         `protobuf:"bytes,3,rep,name=datasourceColumnIds,proto3" json:"datasourceColumnIds,omitempty"`
}

func (x *GBMBIReportColumn) Reset() {
	*x = GBMBIReportColumn{}
	if protoimpl.UnsafeEnabled {
		mi := &file_generic_bi_metadata_extraction_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GBMBIReportColumn) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GBMBIReportColumn) ProtoMessage() {}

func (x *GBMBIReportColumn) ProtoReflect() protoreflect.Message {
	mi := &file_generic_bi_metadata_extraction_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GBMBIReportColumn.ProtoReflect.Descriptor instead.
func (*GBMBIReportColumn) Descriptor() ([]byte, []int) {
	return file_generic_bi_metadata_extraction_proto_rawDescGZIP(), []int{14}
}

func (x *GBMBIReportColumn) GetBiColumnBase() *GBMBIColumnBase {
	if x != nil {
		return x.BiColumnBase
	}
	return nil
}

func (x *GBMBIReportColumn) GetReportId() string {
	if x != nil {
		return x.ReportId
	}
	return ""
}

func (x *GBMBIReportColumn) GetDatasourceColumnIds() []string {
	if x != nil {
		return x.DatasourceColumnIds
	}
	return nil
}

type GBMBIDatasourceColumn struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BiColumnBase              *GBMBIColumnBase `protobuf:"bytes,1,opt,name=biColumnBase,proto3" json:"biColumnBase,omitempty"`
	DatasourceId              string           `protobuf:"bytes,2,opt,name=datasourceId,proto3" json:"datasourceId,omitempty"`
	ParentDatasourceColumnIds []string         `protobuf:"bytes,3,rep,name=parentDatasourceColumnIds,proto3" json:"parentDatasourceColumnIds,omitempty"`
	ParentConnectionColumnIds []string         `protobuf:"bytes,4,rep,name=parentConnectionColumnIds,proto3" json:"parentConnectionColumnIds,omitempty"`
}

func (x *GBMBIDatasourceColumn) Reset() {
	*x = GBMBIDatasourceColumn{}
	if protoimpl.UnsafeEnabled {
		mi := &file_generic_bi_metadata_extraction_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GBMBIDatasourceColumn) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GBMBIDatasourceColumn) ProtoMessage() {}

func (x *GBMBIDatasourceColumn) ProtoReflect() protoreflect.Message {
	mi := &file_generic_bi_metadata_extraction_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GBMBIDatasourceColumn.ProtoReflect.Descriptor instead.
func (*GBMBIDatasourceColumn) Descriptor() ([]byte, []int) {
	return file_generic_bi_metadata_extraction_proto_rawDescGZIP(), []int{15}
}

func (x *GBMBIDatasourceColumn) GetBiColumnBase() *GBMBIColumnBase {
	if x != nil {
		return x.BiColumnBase
	}
	return nil
}

func (x *GBMBIDatasourceColumn) GetDatasourceId() string {
	if x != nil {
		return x.DatasourceId
	}
	return ""
}

func (x *GBMBIDatasourceColumn) GetParentDatasourceColumnIds() []string {
	if x != nil {
		return x.ParentDatasourceColumnIds
	}
	return nil
}

func (x *GBMBIDatasourceColumn) GetParentConnectionColumnIds() []string {
	if x != nil {
		return x.ParentConnectionColumnIds
	}
	return nil
}

type GBMBIConnectionColumn struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	BiColumnBase *GBMBIColumnBase `protobuf:"bytes,1,opt,name=biColumnBase,proto3" json:"biColumnBase,omitempty"`
	ConnectionId string           `protobuf:"bytes,2,opt,name=connectionId,proto3" json:"connectionId,omitempty"`
}

func (x *GBMBIConnectionColumn) Reset() {
	*x = GBMBIConnectionColumn{}
	if protoimpl.UnsafeEnabled {
		mi := &file_generic_bi_metadata_extraction_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GBMBIConnectionColumn) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GBMBIConnectionColumn) ProtoMessage() {}

func (x *GBMBIConnectionColumn) ProtoReflect() protoreflect.Message {
	mi := &file_generic_bi_metadata_extraction_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GBMBIConnectionColumn.ProtoReflect.Descriptor instead.
func (*GBMBIConnectionColumn) Descriptor() ([]byte, []int) {
	return file_generic_bi_metadata_extraction_proto_rawDescGZIP(), []int{16}
}

func (x *GBMBIConnectionColumn) GetBiColumnBase() *GBMBIColumnBase {
	if x != nil {
		return x.BiColumnBase
	}
	return nil
}

func (x *GBMBIConnectionColumn) GetConnectionId() string {
	if x != nil {
		return x.ConnectionId
	}
	return ""
}

type GBMBIPermission struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserExternalId   string `protobuf:"bytes,1,opt,name=userExternalId,proto3" json:"userExternalId,omitempty"`
	ObjectOType      string `protobuf:"bytes,2,opt,name=objectOType,proto3" json:"objectOType,omitempty"`
	ObjectExternalId string `protobuf:"bytes,3,opt,name=objectExternalId,proto3" json:"objectExternalId,omitempty"`
	Id               string `protobuf:"bytes,4,opt,name=id,proto3" json:"id,omitempty"`
}

func (x *GBMBIPermission) Reset() {
	*x = GBMBIPermission{}
	if protoimpl.UnsafeEnabled {
		mi := &file_generic_bi_metadata_extraction_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GBMBIPermission) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GBMBIPermission) ProtoMessage() {}

func (x *GBMBIPermission) ProtoReflect() protoreflect.Message {
	mi := &file_generic_bi_metadata_extraction_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GBMBIPermission.ProtoReflect.Descriptor instead.
func (*GBMBIPermission) Descriptor() ([]byte, []int) {
	return file_generic_bi_metadata_extraction_proto_rawDescGZIP(), []int{17}
}

func (x *GBMBIPermission) GetUserExternalId() string {
	if x != nil {
		return x.UserExternalId
	}
	return ""
}

func (x *GBMBIPermission) GetObjectOType() string {
	if x != nil {
		return x.ObjectOType
	}
	return ""
}

func (x *GBMBIPermission) GetObjectExternalId() string {
	if x != nil {
		return x.ObjectExternalId
	}
	return ""
}

func (x *GBMBIPermission) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type GBMBIImage struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ImageName    string `protobuf:"bytes,1,opt,name=imageName,proto3" json:"imageName,omitempty"`
	ImageData    []byte `protobuf:"bytes,2,opt,name=imageData,proto3" json:"imageData,omitempty"`
	ErrorMessage string `protobuf:"bytes,3,opt,name=errorMessage,proto3" json:"errorMessage,omitempty"`
	HasMore      bool   `protobuf:"varint,4,opt,name=hasMore,proto3" json:"hasMore,omitempty"`
}

func (x *GBMBIImage) Reset() {
	*x = GBMBIImage{}
	if protoimpl.UnsafeEnabled {
		mi := &file_generic_bi_metadata_extraction_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GBMBIImage) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GBMBIImage) ProtoMessage() {}

func (x *GBMBIImage) ProtoReflect() protoreflect.Message {
	mi := &file_generic_bi_metadata_extraction_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GBMBIImage.ProtoReflect.Descriptor instead.
func (*GBMBIImage) Descriptor() ([]byte, []int) {
	return file_generic_bi_metadata_extraction_proto_rawDescGZIP(), []int{18}
}

func (x *GBMBIImage) GetImageName() string {
	if x != nil {
		return x.ImageName
	}
	return ""
}

func (x *GBMBIImage) GetImageData() []byte {
	if x != nil {
		return x.ImageData
	}
	return nil
}

func (x *GBMBIImage) GetErrorMessage() string {
	if x != nil {
		return x.ErrorMessage
	}
	return ""
}

func (x *GBMBIImage) GetHasMore() bool {
	if x != nil {
		return x.HasMore
	}
	return false
}

// Represents an Alation user.
// The intention is to limit extraction to metadata accessible to existing Alation users.
type AlationUser struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Username string `protobuf:"bytes,1,opt,name=username,proto3" json:"username,omitempty"`
}

func (x *AlationUser) Reset() {
	*x = AlationUser{}
	if protoimpl.UnsafeEnabled {
		mi := &file_generic_bi_metadata_extraction_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *AlationUser) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AlationUser) ProtoMessage() {}

func (x *AlationUser) ProtoReflect() protoreflect.Message {
	mi := &file_generic_bi_metadata_extraction_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AlationUser.ProtoReflect.Descriptor instead.
func (*AlationUser) Descriptor() ([]byte, []int) {
	return file_generic_bi_metadata_extraction_proto_rawDescGZIP(), []int{19}
}

func (x *AlationUser) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

var File_generic_bi_metadata_extraction_proto protoreflect.FileDescriptor

var file_generic_bi_metadata_extraction_proto_rawDesc = []byte{
	0x0a, 0x24, 0x67, 0x65, 0x6e, 0x65, 0x72, 0x69, 0x63, 0x5f, 0x62, 0x69, 0x5f, 0x6d, 0x65, 0x74,
	0x61, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x65, 0x78, 0x74, 0x72, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x03, 0x67, 0x62, 0x6d, 0x22, 0x45, 0x0a, 0x1b, 0x47,
	0x42, 0x4d, 0x42, 0x49, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65,
	0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x76, 0x61, 0x6c,
	0x75, 0x65, 0x22, 0x56, 0x0a, 0x12, 0x47, 0x42, 0x4d, 0x42, 0x49, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x40, 0x0a, 0x0a, 0x70, 0x61, 0x72, 0x61,
	0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x20, 0x2e, 0x67,
	0x62, 0x6d, 0x2e, 0x47, 0x42, 0x4d, 0x42, 0x49, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x52, 0x0a,
	0x70, 0x61, 0x72, 0x61, 0x6d, 0x65, 0x74, 0x65, 0x72, 0x73, 0x22, 0x5b, 0x0a, 0x1a, 0x56, 0x65,
	0x72, 0x69, 0x66, 0x79, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3d, 0x0a, 0x0d, 0x63, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x17, 0x2e, 0x67, 0x62, 0x6d, 0x2e, 0x47, 0x42, 0x4d, 0x42, 0x49, 0x43, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0d, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x7e, 0x0a, 0x15, 0x4c, 0x69, 0x73, 0x74, 0x46,
	0x69, 0x6c, 0x65, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x12, 0x3d, 0x0a, 0x0d, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x67, 0x62, 0x6d, 0x2e, 0x47, 0x42,
	0x4d, 0x42, 0x49, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x0d, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12,
	0x26, 0x0a, 0x05, 0x75, 0x73, 0x65, 0x72, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10,
	0x2e, 0x67, 0x62, 0x6d, 0x2e, 0x41, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x55, 0x73, 0x65, 0x72,
	0x52, 0x05, 0x75, 0x73, 0x65, 0x72, 0x73, 0x22, 0xd7, 0x01, 0x0a, 0x18, 0x52, 0x75, 0x6e, 0x46,
	0x75, 0x6c, 0x6c, 0x45, 0x78, 0x74, 0x72, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x3d, 0x0a, 0x0d, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x67, 0x62,
	0x6d, 0x2e, 0x47, 0x42, 0x4d, 0x42, 0x49, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0d, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x12, 0x2a, 0x0a, 0x07, 0x66, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x73, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x67, 0x62, 0x6d, 0x2e, 0x47, 0x42, 0x4d, 0x42, 0x49,
	0x46, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x52, 0x07, 0x66, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x73, 0x12,
	0x28, 0x0a, 0x0f, 0x69, 0x73, 0x49, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x46, 0x69, 0x6c, 0x74,
	0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0f, 0x69, 0x73, 0x49, 0x6e, 0x63, 0x6c,
	0x75, 0x64, 0x65, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x26, 0x0a, 0x05, 0x75, 0x73, 0x65,
	0x72, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x67, 0x62, 0x6d, 0x2e, 0x41,
	0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x05, 0x75, 0x73, 0x65, 0x72,
	0x73, 0x22, 0xba, 0x01, 0x0a, 0x1d, 0x50, 0x72, 0x6f, 0x70, 0x61, 0x67, 0x61, 0x74, 0x65, 0x43,
	0x65, 0x72, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x3d, 0x0a, 0x0d, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61,
	0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x67, 0x62, 0x6d,
	0x2e, 0x47, 0x42, 0x4d, 0x42, 0x49, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x0d, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x12, 0x2c, 0x0a, 0x08, 0x62, 0x69, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x67, 0x62, 0x6d, 0x2e, 0x47, 0x42, 0x4d, 0x42, 0x49,
	0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x08, 0x62, 0x69, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x6f, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x6f, 0x74, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x63, 0x65, 0x72, 0x74, 0x69, 0x66, 0x79, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x63, 0x65, 0x72, 0x74, 0x69, 0x66, 0x79, 0x22, 0xef,
	0x04, 0x0a, 0x10, 0x42, 0x49, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x28, 0x0a, 0x06, 0x62, 0x69, 0x55, 0x73, 0x65, 0x72, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x67, 0x62, 0x6d, 0x2e, 0x47, 0x42, 0x4d, 0x42, 0x49, 0x55,
	0x73, 0x65, 0x72, 0x48, 0x00, 0x52, 0x06, 0x62, 0x69, 0x55, 0x73, 0x65, 0x72, 0x12, 0x2e, 0x0a,
	0x08, 0x62, 0x69, 0x46, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x10, 0x2e, 0x67, 0x62, 0x6d, 0x2e, 0x47, 0x42, 0x4d, 0x42, 0x49, 0x46, 0x6f, 0x6c, 0x64, 0x65,
	0x72, 0x48, 0x00, 0x52, 0x08, 0x62, 0x69, 0x46, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x12, 0x2e, 0x0a,
	0x08, 0x62, 0x69, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x10, 0x2e, 0x67, 0x62, 0x6d, 0x2e, 0x47, 0x42, 0x4d, 0x42, 0x49, 0x52, 0x65, 0x70, 0x6f, 0x72,
	0x74, 0x48, 0x00, 0x52, 0x08, 0x62, 0x69, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x12, 0x3a, 0x0a,
	0x0c, 0x62, 0x69, 0x44, 0x61, 0x74, 0x61, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67, 0x62, 0x6d, 0x2e, 0x47, 0x42, 0x4d, 0x42, 0x49, 0x44,
	0x61, 0x74, 0x61, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x48, 0x00, 0x52, 0x0c, 0x62, 0x69, 0x44,
	0x61, 0x74, 0x61, 0x53, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x12, 0x3a, 0x0a, 0x0c, 0x62, 0x69, 0x43,
	0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x14, 0x2e, 0x67, 0x62, 0x6d, 0x2e, 0x47, 0x42, 0x4d, 0x42, 0x49, 0x43, 0x6f, 0x6e, 0x6e, 0x65,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x00, 0x52, 0x0c, 0x62, 0x69, 0x43, 0x6f, 0x6e, 0x6e, 0x65,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x40, 0x0a, 0x0e, 0x62, 0x69, 0x52, 0x65, 0x70, 0x6f, 0x72,
	0x74, 0x43, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e,
	0x67, 0x62, 0x6d, 0x2e, 0x47, 0x42, 0x4d, 0x42, 0x49, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x43,
	0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x48, 0x00, 0x52, 0x0e, 0x62, 0x69, 0x52, 0x65, 0x70, 0x6f, 0x72,
	0x74, 0x43, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x12, 0x4c, 0x0a, 0x12, 0x62, 0x69, 0x44, 0x61, 0x74,
	0x61, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x43, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x18, 0x07, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x62, 0x6d, 0x2e, 0x47, 0x42, 0x4d, 0x42, 0x49, 0x44,
	0x61, 0x74, 0x61, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x43, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x48,
	0x00, 0x52, 0x12, 0x62, 0x69, 0x44, 0x61, 0x74, 0x61, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x43,
	0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x12, 0x4c, 0x0a, 0x12, 0x62, 0x69, 0x43, 0x6f, 0x6e, 0x6e, 0x65,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x62, 0x6d, 0x2e, 0x47, 0x42, 0x4d, 0x42, 0x49, 0x43, 0x6f, 0x6e,
	0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x48, 0x00, 0x52,
	0x12, 0x62, 0x69, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6c,
	0x75, 0x6d, 0x6e, 0x12, 0x3a, 0x0a, 0x0c, 0x62, 0x69, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x18, 0x09, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67, 0x62, 0x6d, 0x2e,
	0x47, 0x42, 0x4d, 0x42, 0x49, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x48,
	0x00, 0x52, 0x0c, 0x62, 0x69, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12,
	0x2b, 0x0a, 0x07, 0x62, 0x69, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0f, 0x2e, 0x67, 0x62, 0x6d, 0x2e, 0x47, 0x42, 0x4d, 0x42, 0x49, 0x49, 0x6d, 0x61, 0x67,
	0x65, 0x48, 0x00, 0x52, 0x07, 0x62, 0x69, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x42, 0x12, 0x0a, 0x10,
	0x62, 0x69, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0xe7, 0x02, 0x0a, 0x0b, 0x47, 0x42, 0x4d, 0x42, 0x49, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x62, 0x69, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74,
	0x54, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x62, 0x69, 0x4f, 0x62,
	0x6a, 0x65, 0x63, 0x74, 0x54, 0x79, 0x70, 0x65, 0x12, 0x20, 0x0a, 0x0b, 0x64, 0x65, 0x73, 0x63,
	0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x64,
	0x65, 0x73, 0x63, 0x72, 0x69, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x20, 0x0a, 0x0b, 0x6c, 0x61, 0x73, 0x74,
	0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6c,
	0x61, 0x73, 0x74, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x55, 0x72, 0x6c, 0x12, 0x4c, 0x0a, 0x0e, 0x62, 0x69, 0x43,
	0x6f, 0x6d, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x65, 0x4b, 0x65, 0x79, 0x18, 0x08, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x24, 0x2e, 0x67, 0x62, 0x6d, 0x2e, 0x47, 0x42, 0x4d, 0x42, 0x49, 0x4f, 0x62, 0x6a,
	0x65, 0x63, 0x74, 0x2e, 0x42, 0x69, 0x43, 0x6f, 0x6d, 0x70, 0x6f, 0x73, 0x69, 0x74, 0x65, 0x4b,
	0x65, 0x79, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x0e, 0x62, 0x69, 0x43, 0x6f, 0x6d, 0x70, 0x6f,
	0x73, 0x69, 0x74, 0x65, 0x4b, 0x65, 0x79, 0x1a, 0x41, 0x0a, 0x13, 0x42, 0x69, 0x43, 0x6f, 0x6d,
	0x70, 0x6f, 0x73, 0x69, 0x74, 0x65, 0x4b, 0x65, 0x79, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10,
	0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79,
	0x12, 0x14, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x55, 0x0a, 0x09, 0x47, 0x42,
	0x4d, 0x42, 0x49, 0x55, 0x73, 0x65, 0x72, 0x12, 0x2c, 0x0a, 0x08, 0x62, 0x69, 0x4f, 0x62, 0x6a,
	0x65, 0x63, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x67, 0x62, 0x6d, 0x2e,
	0x47, 0x42, 0x4d, 0x42, 0x49, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x08, 0x62, 0x69, 0x4f,
	0x62, 0x6a, 0x65, 0x63, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d,
	0x65, 0x22, 0xed, 0x01, 0x0a, 0x0b, 0x47, 0x42, 0x4d, 0x42, 0x49, 0x46, 0x6f, 0x6c, 0x64, 0x65,
	0x72, 0x12, 0x2c, 0x0a, 0x08, 0x62, 0x69, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x67, 0x62, 0x6d, 0x2e, 0x47, 0x42, 0x4d, 0x42, 0x49, 0x4f,
	0x62, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x08, 0x62, 0x69, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x12,
	0x14, 0x0a, 0x05, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x6f, 0x77, 0x6e, 0x65, 0x72, 0x12, 0x1e, 0x0a, 0x0a, 0x6e, 0x75, 0x6d, 0x52, 0x65, 0x70, 0x6f,
	0x72, 0x74, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0a, 0x6e, 0x75, 0x6d, 0x52, 0x65,
	0x70, 0x6f, 0x72, 0x74, 0x73, 0x12, 0x2c, 0x0a, 0x11, 0x6e, 0x75, 0x6d, 0x52, 0x65, 0x70, 0x6f,
	0x72, 0x74, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x65, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x11, 0x6e, 0x75, 0x6d, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x41, 0x63, 0x63, 0x65, 0x73,
	0x73, 0x65, 0x73, 0x12, 0x26, 0x0a, 0x0e, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x46, 0x6f, 0x6c,
	0x64, 0x65, 0x72, 0x49, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x70, 0x61, 0x72,
	0x65, 0x6e, 0x74, 0x46, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x49, 0x64, 0x12, 0x24, 0x0a, 0x0d, 0x69,
	0x73, 0x45, 0x78, 0x74, 0x72, 0x61, 0x63, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x06, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x0d, 0x69, 0x73, 0x45, 0x78, 0x74, 0x72, 0x61, 0x63, 0x74, 0x61, 0x62, 0x6c,
	0x65, 0x22, 0xb9, 0x02, 0x0a, 0x0b, 0x47, 0x42, 0x4d, 0x42, 0x49, 0x52, 0x65, 0x70, 0x6f, 0x72,
	0x74, 0x12, 0x2c, 0x0a, 0x08, 0x62, 0x69, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x67, 0x62, 0x6d, 0x2e, 0x47, 0x42, 0x4d, 0x42, 0x49, 0x4f,
	0x62, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x08, 0x62, 0x69, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x12,
	0x14, 0x0a, 0x05, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x6f, 0x77, 0x6e, 0x65, 0x72, 0x12, 0x20, 0x0a, 0x0b, 0x6e, 0x75, 0x6d, 0x41, 0x63, 0x63, 0x65,
	0x73, 0x73, 0x65, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0b, 0x6e, 0x75, 0x6d, 0x41,
	0x63, 0x63, 0x65, 0x73, 0x73, 0x65, 0x73, 0x12, 0x26, 0x0a, 0x0e, 0x70, 0x61, 0x72, 0x65, 0x6e,
	0x74, 0x46, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x49, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0e, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x46, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x49, 0x64, 0x12,
	0x28, 0x0a, 0x0f, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x49,
	0x64, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x09, 0x52, 0x0f, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74,
	0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x49, 0x64, 0x73, 0x12, 0x24, 0x0a, 0x0d, 0x64, 0x61, 0x74,
	0x61, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x49, 0x64, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x09,
	0x52, 0x0d, 0x64, 0x61, 0x74, 0x61, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x49, 0x64, 0x73, 0x12,
	0x29, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x15, 0x2e,
	0x67, 0x62, 0x6d, 0x2e, 0x47, 0x42, 0x4d, 0x42, 0x49, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x2e,
	0x54, 0x79, 0x70, 0x65, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x22, 0x21, 0x0a, 0x04, 0x54, 0x79,
	0x70, 0x65, 0x12, 0x0a, 0x0a, 0x06, 0x53, 0x49, 0x4d, 0x50, 0x4c, 0x45, 0x10, 0x00, 0x12, 0x0d,
	0x0a, 0x09, 0x44, 0x41, 0x53, 0x48, 0x42, 0x4f, 0x41, 0x52, 0x44, 0x10, 0x01, 0x22, 0xa3, 0x01,
	0x0a, 0x0f, 0x47, 0x42, 0x4d, 0x42, 0x49, 0x44, 0x61, 0x74, 0x61, 0x73, 0x6f, 0x75, 0x72, 0x63,
	0x65, 0x12, 0x2c, 0x0a, 0x08, 0x62, 0x69, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x67, 0x62, 0x6d, 0x2e, 0x47, 0x42, 0x4d, 0x42, 0x49, 0x4f,
	0x62, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x08, 0x62, 0x69, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x12,
	0x14, 0x0a, 0x05, 0x6f, 0x77, 0x6e, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05,
	0x6f, 0x77, 0x6e, 0x65, 0x72, 0x12, 0x26, 0x0a, 0x0e, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x46,
	0x6f, 0x6c, 0x64, 0x65, 0x72, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x70,
	0x61, 0x72, 0x65, 0x6e, 0x74, 0x46, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x49, 0x64, 0x12, 0x24, 0x0a,
	0x0d, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x73, 0x18, 0x04,
	0x20, 0x03, 0x28, 0x09, 0x52, 0x0d, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x49, 0x64, 0x73, 0x22, 0xca, 0x03, 0x0a, 0x0f, 0x47, 0x42, 0x4d, 0x42, 0x49, 0x43, 0x6f, 0x6e,
	0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x2c, 0x0a, 0x08, 0x62, 0x69, 0x4f, 0x62, 0x6a,
	0x65, 0x63, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x67, 0x62, 0x6d, 0x2e,
	0x47, 0x42, 0x4d, 0x42, 0x49, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x08, 0x62, 0x69, 0x4f,
	0x62, 0x6a, 0x65, 0x63, 0x74, 0x12, 0x26, 0x0a, 0x0e, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x46,
	0x6f, 0x6c, 0x64, 0x65, 0x72, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x70,
	0x61, 0x72, 0x65, 0x6e, 0x74, 0x46, 0x6f, 0x6c, 0x64, 0x65, 0x72, 0x49, 0x64, 0x12, 0x41, 0x0a,
	0x0e, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x19, 0x2e, 0x67, 0x62, 0x6d, 0x2e, 0x47, 0x42, 0x4d, 0x42,
	0x49, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x54, 0x79, 0x70, 0x65,
	0x52, 0x0e, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x34, 0x0a, 0x15, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x43, 0x6f, 0x6e, 0x6e, 0x65,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x15, 0x64, 0x69, 0x73, 0x70, 0x6c, 0x61, 0x79, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x12, 0x22, 0x0a, 0x0c, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61,
	0x73, 0x65, 0x54, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x64, 0x61,
	0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x54, 0x79, 0x70, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x68, 0x6f,
	0x73, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x68, 0x6f, 0x73, 0x74, 0x12, 0x12,
	0x0a, 0x04, 0x70, 0x6f, 0x72, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x6f,
	0x72, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x62, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x62, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x12, 0x18,
	0x0a, 0x07, 0x64, 0x62, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x64, 0x62, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x73, 0x71, 0x6c, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x73, 0x71, 0x6c, 0x12, 0x1c, 0x0a, 0x09, 0x64, 0x61,
	0x74, 0x61, 0x46, 0x69, 0x6c, 0x65, 0x73, 0x18, 0x0b, 0x20, 0x03, 0x28, 0x09, 0x52, 0x09, 0x64,
	0x61, 0x74, 0x61, 0x46, 0x69, 0x6c, 0x65, 0x73, 0x22, 0x36, 0x0a, 0x04, 0x54, 0x79, 0x70, 0x65,
	0x12, 0x09, 0x0a, 0x05, 0x46, 0x49, 0x4c, 0x45, 0x53, 0x10, 0x00, 0x12, 0x09, 0x0a, 0x05, 0x54,
	0x41, 0x42, 0x4c, 0x45, 0x10, 0x01, 0x12, 0x0d, 0x0a, 0x09, 0x53, 0x51, 0x4c, 0x5f, 0x51, 0x55,
	0x45, 0x52, 0x59, 0x10, 0x02, 0x12, 0x09, 0x0a, 0x05, 0x4f, 0x54, 0x48, 0x45, 0x52, 0x10, 0x03,
	0x22, 0xa7, 0x01, 0x0a, 0x0f, 0x47, 0x42, 0x4d, 0x42, 0x49, 0x43, 0x6f, 0x6c, 0x75, 0x6d, 0x6e,
	0x42, 0x61, 0x73, 0x65, 0x12, 0x2c, 0x0a, 0x08, 0x62, 0x69, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x67, 0x62, 0x6d, 0x2e, 0x47, 0x42, 0x4d,
	0x42, 0x49, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x08, 0x62, 0x69, 0x4f, 0x62, 0x6a, 0x65,
	0x63, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x61, 0x74, 0x61, 0x54, 0x79, 0x70, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x61, 0x74, 0x61, 0x54, 0x79, 0x70, 0x65, 0x12, 0x12,
	0x0a, 0x04, 0x72, 0x6f, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x72, 0x6f,
	0x6c, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x65, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x65, 0x78, 0x70, 0x72, 0x65, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x18, 0x05, 0x20, 0x03,
	0x28, 0x09, 0x52, 0x06, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x73, 0x22, 0x9b, 0x01, 0x0a, 0x11, 0x47,
	0x42, 0x4d, 0x42, 0x49, 0x52, 0x65, 0x70, 0x6f, 0x72, 0x74, 0x43, 0x6f, 0x6c, 0x75, 0x6d, 0x6e,
	0x12, 0x38, 0x0a, 0x0c, 0x62, 0x69, 0x43, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x42, 0x61, 0x73, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67, 0x62, 0x6d, 0x2e, 0x47, 0x42, 0x4d,
	0x42, 0x49, 0x43, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x42, 0x61, 0x73, 0x65, 0x52, 0x0c, 0x62, 0x69,
	0x43, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x42, 0x61, 0x73, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65,
	0x70, 0x6f, 0x72, 0x74, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72, 0x65,
	0x70, 0x6f, 0x72, 0x74, 0x49, 0x64, 0x12, 0x30, 0x0a, 0x13, 0x64, 0x61, 0x74, 0x61, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x43, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x49, 0x64, 0x73, 0x18, 0x03, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x13, 0x64, 0x61, 0x74, 0x61, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x43,
	0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x49, 0x64, 0x73, 0x22, 0xf1, 0x01, 0x0a, 0x15, 0x47, 0x42, 0x4d,
	0x42, 0x49, 0x44, 0x61, 0x74, 0x61, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x43, 0x6f, 0x6c, 0x75,
	0x6d, 0x6e, 0x12, 0x38, 0x0a, 0x0c, 0x62, 0x69, 0x43, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x42, 0x61,
	0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67, 0x62, 0x6d, 0x2e, 0x47,
	0x42, 0x4d, 0x42, 0x49, 0x43, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x42, 0x61, 0x73, 0x65, 0x52, 0x0c,
	0x62, 0x69, 0x43, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x42, 0x61, 0x73, 0x65, 0x12, 0x22, 0x0a, 0x0c,
	0x64, 0x61, 0x74, 0x61, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0c, 0x64, 0x61, 0x74, 0x61, 0x73, 0x6f, 0x75, 0x72, 0x63, 0x65, 0x49, 0x64,
	0x12, 0x3c, 0x0a, 0x19, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x44, 0x61, 0x74, 0x61, 0x73, 0x6f,
	0x75, 0x72, 0x63, 0x65, 0x43, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x49, 0x64, 0x73, 0x18, 0x03, 0x20,
	0x03, 0x28, 0x09, 0x52, 0x19, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x44, 0x61, 0x74, 0x61, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x43, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x49, 0x64, 0x73, 0x12, 0x3c,
	0x0a, 0x19, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x43, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x49, 0x64, 0x73, 0x18, 0x04, 0x20, 0x03, 0x28,
	0x09, 0x52, 0x19, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x43, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x49, 0x64, 0x73, 0x22, 0x75, 0x0a, 0x15,
	0x47, 0x42, 0x4d, 0x42, 0x49, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x43,
	0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x12, 0x38, 0x0a, 0x0c, 0x62, 0x69, 0x43, 0x6f, 0x6c, 0x75, 0x6d,
	0x6e, 0x42, 0x61, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x14, 0x2e, 0x67, 0x62,
	0x6d, 0x2e, 0x47, 0x42, 0x4d, 0x42, 0x49, 0x43, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x42, 0x61, 0x73,
	0x65, 0x52, 0x0c, 0x62, 0x69, 0x43, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x42, 0x61, 0x73, 0x65, 0x12,
	0x22, 0x0a, 0x0c, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x49, 0x64, 0x22, 0x97, 0x01, 0x0a, 0x0f, 0x47, 0x42, 0x4d, 0x42, 0x49, 0x50, 0x65, 0x72,
	0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x12, 0x26, 0x0a, 0x0e, 0x75, 0x73, 0x65, 0x72, 0x45,
	0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0e, 0x75, 0x73, 0x65, 0x72, 0x45, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x49, 0x64, 0x12,
	0x20, 0x0a, 0x0b, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x4f, 0x54, 0x79, 0x70, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x4f, 0x54, 0x79, 0x70,
	0x65, 0x12, 0x2a, 0x0a, 0x10, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x45, 0x78, 0x74, 0x65, 0x72,
	0x6e, 0x61, 0x6c, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x10, 0x6f, 0x62, 0x6a,
	0x65, 0x63, 0x74, 0x45, 0x78, 0x74, 0x65, 0x72, 0x6e, 0x61, 0x6c, 0x49, 0x64, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x22, 0x86, 0x01,
	0x0a, 0x0a, 0x47, 0x42, 0x4d, 0x42, 0x49, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x12, 0x1c, 0x0a, 0x09,
	0x69, 0x6d, 0x61, 0x67, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x69, 0x6d, 0x61, 0x67, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x69, 0x6d,
	0x61, 0x67, 0x65, 0x44, 0x61, 0x74, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x09, 0x69,
	0x6d, 0x61, 0x67, 0x65, 0x44, 0x61, 0x74, 0x61, 0x12, 0x22, 0x0a, 0x0c, 0x65, 0x72, 0x72, 0x6f,
	0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c,
	0x65, 0x72, 0x72, 0x6f, 0x72, 0x4d, 0x65, 0x73, 0x73, 0x61, 0x67, 0x65, 0x12, 0x18, 0x0a, 0x07,
	0x68, 0x61, 0x73, 0x4d, 0x6f, 0x72, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x68,
	0x61, 0x73, 0x4d, 0x6f, 0x72, 0x65, 0x22, 0x29, 0x0a, 0x0b, 0x41, 0x6c, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x55, 0x73, 0x65, 0x72, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d,
	0x65, 0x32, 0xc7, 0x02, 0x0a, 0x03, 0x47, 0x62, 0x6d, 0x12, 0x4f, 0x0a, 0x13, 0x56, 0x65, 0x72,
	0x69, 0x66, 0x79, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x12, 0x1f, 0x2e, 0x67, 0x62, 0x6d, 0x2e, 0x56, 0x65, 0x72, 0x69, 0x66, 0x79, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x15, 0x2e, 0x67, 0x62, 0x6d, 0x2e, 0x42, 0x49, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x47, 0x0a, 0x0e, 0x4c, 0x69,
	0x73, 0x74, 0x46, 0x69, 0x6c, 0x65, 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x12, 0x1a, 0x2e, 0x67,
	0x62, 0x6d, 0x2e, 0x4c, 0x69, 0x73, 0x74, 0x46, 0x69, 0x6c, 0x65, 0x53, 0x79, 0x73, 0x74, 0x65,
	0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x15, 0x2e, 0x67, 0x62, 0x6d, 0x2e, 0x42,
	0x49, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x30, 0x01, 0x12, 0x4d, 0x0a, 0x11, 0x52, 0x75, 0x6e, 0x46, 0x75, 0x6c, 0x6c, 0x45, 0x78,
	0x74, 0x72, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x1d, 0x2e, 0x67, 0x62, 0x6d, 0x2e, 0x52,
	0x75, 0x6e, 0x46, 0x75, 0x6c, 0x6c, 0x45, 0x78, 0x74, 0x72, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x15, 0x2e, 0x67, 0x62, 0x6d, 0x2e, 0x42, 0x49,
	0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00,
	0x30, 0x01, 0x12, 0x57, 0x0a, 0x16, 0x70, 0x72, 0x6f, 0x70, 0x61, 0x67, 0x61, 0x74, 0x65, 0x43,
	0x65, 0x72, 0x74, 0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x22, 0x2e, 0x67,
	0x62, 0x6d, 0x2e, 0x50, 0x72, 0x6f, 0x70, 0x61, 0x67, 0x61, 0x74, 0x65, 0x43, 0x65, 0x72, 0x74,
	0x69, 0x66, 0x69, 0x63, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x15, 0x2e, 0x67, 0x62, 0x6d, 0x2e, 0x42, 0x49, 0x4f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x30, 0x01, 0x42, 0x3d, 0x0a, 0x12, 0x61,
	0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x67, 0x62, 0x6d, 0x2e, 0x6d, 0x6f, 0x64, 0x65, 0x6c,
	0x73, 0x42, 0x08, 0x47, 0x62, 0x6d, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x50, 0x01, 0x5a, 0x15, 0x61,
	0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6f, 0x63, 0x66, 0x2f, 0x62,
	0x69, 0x2f, 0x76, 0x31, 0xa2, 0x02, 0x03, 0x47, 0x42, 0x4d, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x33,
}

var (
	file_generic_bi_metadata_extraction_proto_rawDescOnce sync.Once
	file_generic_bi_metadata_extraction_proto_rawDescData = file_generic_bi_metadata_extraction_proto_rawDesc
)

func file_generic_bi_metadata_extraction_proto_rawDescGZIP() []byte {
	file_generic_bi_metadata_extraction_proto_rawDescOnce.Do(func() {
		file_generic_bi_metadata_extraction_proto_rawDescData = protoimpl.X.CompressGZIP(file_generic_bi_metadata_extraction_proto_rawDescData)
	})
	return file_generic_bi_metadata_extraction_proto_rawDescData
}

var file_generic_bi_metadata_extraction_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_generic_bi_metadata_extraction_proto_msgTypes = make([]protoimpl.MessageInfo, 21)
var file_generic_bi_metadata_extraction_proto_goTypes = []interface{}{
	(GBMBIReport_Type)(0),                 // 0: gbm.GBMBIReport.Type
	(GBMBIConnection_Type)(0),             // 1: gbm.GBMBIConnection.Type
	(*GBMBIConfigurationParameter)(nil),   // 2: gbm.GBMBIConfigurationParameter
	(*GBMBIConfiguration)(nil),            // 3: gbm.GBMBIConfiguration
	(*VerifyConfigurationRequest)(nil),    // 4: gbm.VerifyConfigurationRequest
	(*ListFileSystemRequest)(nil),         // 5: gbm.ListFileSystemRequest
	(*RunFullExtractionRequest)(nil),      // 6: gbm.RunFullExtractionRequest
	(*PropagateCertificationRequest)(nil), // 7: gbm.PropagateCertificationRequest
	(*BIObjectResponse)(nil),              // 8: gbm.BIObjectResponse
	(*GBMBIObject)(nil),                   // 9: gbm.GBMBIObject
	(*GBMBIUser)(nil),                     // 10: gbm.GBMBIUser
	(*GBMBIFolder)(nil),                   // 11: gbm.GBMBIFolder
	(*GBMBIReport)(nil),                   // 12: gbm.GBMBIReport
	(*GBMBIDatasource)(nil),               // 13: gbm.GBMBIDatasource
	(*GBMBIConnection)(nil),               // 14: gbm.GBMBIConnection
	(*GBMBIColumnBase)(nil),               // 15: gbm.GBMBIColumnBase
	(*GBMBIReportColumn)(nil),             // 16: gbm.GBMBIReportColumn
	(*GBMBIDatasourceColumn)(nil),         // 17: gbm.GBMBIDatasourceColumn
	(*GBMBIConnectionColumn)(nil),         // 18: gbm.GBMBIConnectionColumn
	(*GBMBIPermission)(nil),               // 19: gbm.GBMBIPermission
	(*GBMBIImage)(nil),                    // 20: gbm.GBMBIImage
	(*AlationUser)(nil),                   // 21: gbm.AlationUser
	nil,                                   // 22: gbm.GBMBIObject.BiCompositeKeyEntry
}
var file_generic_bi_metadata_extraction_proto_depIdxs = []int32{
	2,  // 0: gbm.GBMBIConfiguration.parameters:type_name -> gbm.GBMBIConfigurationParameter
	3,  // 1: gbm.VerifyConfigurationRequest.configuration:type_name -> gbm.GBMBIConfiguration
	3,  // 2: gbm.ListFileSystemRequest.configuration:type_name -> gbm.GBMBIConfiguration
	21, // 3: gbm.ListFileSystemRequest.users:type_name -> gbm.AlationUser
	3,  // 4: gbm.RunFullExtractionRequest.configuration:type_name -> gbm.GBMBIConfiguration
	11, // 5: gbm.RunFullExtractionRequest.folders:type_name -> gbm.GBMBIFolder
	21, // 6: gbm.RunFullExtractionRequest.users:type_name -> gbm.AlationUser
	3,  // 7: gbm.PropagateCertificationRequest.configuration:type_name -> gbm.GBMBIConfiguration
	9,  // 8: gbm.PropagateCertificationRequest.biObject:type_name -> gbm.GBMBIObject
	10, // 9: gbm.BIObjectResponse.biUser:type_name -> gbm.GBMBIUser
	11, // 10: gbm.BIObjectResponse.biFolder:type_name -> gbm.GBMBIFolder
	12, // 11: gbm.BIObjectResponse.biReport:type_name -> gbm.GBMBIReport
	13, // 12: gbm.BIObjectResponse.biDataSource:type_name -> gbm.GBMBIDatasource
	14, // 13: gbm.BIObjectResponse.biConnection:type_name -> gbm.GBMBIConnection
	16, // 14: gbm.BIObjectResponse.biReportColumn:type_name -> gbm.GBMBIReportColumn
	17, // 15: gbm.BIObjectResponse.biDatasourceColumn:type_name -> gbm.GBMBIDatasourceColumn
	18, // 16: gbm.BIObjectResponse.biConnectionColumn:type_name -> gbm.GBMBIConnectionColumn
	19, // 17: gbm.BIObjectResponse.biPermission:type_name -> gbm.GBMBIPermission
	20, // 18: gbm.BIObjectResponse.biImage:type_name -> gbm.GBMBIImage
	22, // 19: gbm.GBMBIObject.biCompositeKey:type_name -> gbm.GBMBIObject.BiCompositeKeyEntry
	9,  // 20: gbm.GBMBIUser.biObject:type_name -> gbm.GBMBIObject
	9,  // 21: gbm.GBMBIFolder.biObject:type_name -> gbm.GBMBIObject
	9,  // 22: gbm.GBMBIReport.biObject:type_name -> gbm.GBMBIObject
	0,  // 23: gbm.GBMBIReport.type:type_name -> gbm.GBMBIReport.Type
	9,  // 24: gbm.GBMBIDatasource.biObject:type_name -> gbm.GBMBIObject
	9,  // 25: gbm.GBMBIConnection.biObject:type_name -> gbm.GBMBIObject
	1,  // 26: gbm.GBMBIConnection.connectionType:type_name -> gbm.GBMBIConnection.Type
	9,  // 27: gbm.GBMBIColumnBase.biObject:type_name -> gbm.GBMBIObject
	15, // 28: gbm.GBMBIReportColumn.biColumnBase:type_name -> gbm.GBMBIColumnBase
	15, // 29: gbm.GBMBIDatasourceColumn.biColumnBase:type_name -> gbm.GBMBIColumnBase
	15, // 30: gbm.GBMBIConnectionColumn.biColumnBase:type_name -> gbm.GBMBIColumnBase
	4,  // 31: gbm.Gbm.VerifyConfiguration:input_type -> gbm.VerifyConfigurationRequest
	5,  // 32: gbm.Gbm.ListFileSystem:input_type -> gbm.ListFileSystemRequest
	6,  // 33: gbm.Gbm.RunFullExtraction:input_type -> gbm.RunFullExtractionRequest
	7,  // 34: gbm.Gbm.propagateCertification:input_type -> gbm.PropagateCertificationRequest
	8,  // 35: gbm.Gbm.VerifyConfiguration:output_type -> gbm.BIObjectResponse
	8,  // 36: gbm.Gbm.ListFileSystem:output_type -> gbm.BIObjectResponse
	8,  // 37: gbm.Gbm.RunFullExtraction:output_type -> gbm.BIObjectResponse
	8,  // 38: gbm.Gbm.propagateCertification:output_type -> gbm.BIObjectResponse
	35, // [35:39] is the sub-list for method output_type
	31, // [31:35] is the sub-list for method input_type
	31, // [31:31] is the sub-list for extension type_name
	31, // [31:31] is the sub-list for extension extendee
	0,  // [0:31] is the sub-list for field type_name
}

func init() { file_generic_bi_metadata_extraction_proto_init() }
func file_generic_bi_metadata_extraction_proto_init() {
	if File_generic_bi_metadata_extraction_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_generic_bi_metadata_extraction_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GBMBIConfigurationParameter); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_generic_bi_metadata_extraction_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GBMBIConfiguration); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_generic_bi_metadata_extraction_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*VerifyConfigurationRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_generic_bi_metadata_extraction_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ListFileSystemRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_generic_bi_metadata_extraction_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RunFullExtractionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_generic_bi_metadata_extraction_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*PropagateCertificationRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_generic_bi_metadata_extraction_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*BIObjectResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_generic_bi_metadata_extraction_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GBMBIObject); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_generic_bi_metadata_extraction_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GBMBIUser); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_generic_bi_metadata_extraction_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GBMBIFolder); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_generic_bi_metadata_extraction_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GBMBIReport); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_generic_bi_metadata_extraction_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GBMBIDatasource); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_generic_bi_metadata_extraction_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GBMBIConnection); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_generic_bi_metadata_extraction_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GBMBIColumnBase); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_generic_bi_metadata_extraction_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GBMBIReportColumn); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_generic_bi_metadata_extraction_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GBMBIDatasourceColumn); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_generic_bi_metadata_extraction_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GBMBIConnectionColumn); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_generic_bi_metadata_extraction_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GBMBIPermission); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_generic_bi_metadata_extraction_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GBMBIImage); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_generic_bi_metadata_extraction_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*AlationUser); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_generic_bi_metadata_extraction_proto_msgTypes[6].OneofWrappers = []interface{}{
		(*BIObjectResponse_BiUser)(nil),
		(*BIObjectResponse_BiFolder)(nil),
		(*BIObjectResponse_BiReport)(nil),
		(*BIObjectResponse_BiDataSource)(nil),
		(*BIObjectResponse_BiConnection)(nil),
		(*BIObjectResponse_BiReportColumn)(nil),
		(*BIObjectResponse_BiDatasourceColumn)(nil),
		(*BIObjectResponse_BiConnectionColumn)(nil),
		(*BIObjectResponse_BiPermission)(nil),
		(*BIObjectResponse_BiImage)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_generic_bi_metadata_extraction_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   21,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_generic_bi_metadata_extraction_proto_goTypes,
		DependencyIndexes: file_generic_bi_metadata_extraction_proto_depIdxs,
		EnumInfos:         file_generic_bi_metadata_extraction_proto_enumTypes,
		MessageInfos:      file_generic_bi_metadata_extraction_proto_msgTypes,
	}.Build()
	File_generic_bi_metadata_extraction_proto = out.File
	file_generic_bi_metadata_extraction_proto_rawDesc = nil
	file_generic_bi_metadata_extraction_proto_goTypes = nil
	file_generic_bi_metadata_extraction_proto_depIdxs = nil
}
