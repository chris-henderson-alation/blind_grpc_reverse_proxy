// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.6.1
// source: mde.proto

package mde

import (
	common "alation.com/ocf/rdbms/common"
	mde_objects "alation.com/ocf/rdbms/mde_objects"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// ----------------------------------------------- Extract Filter ------------------------------------------------
type FilterExtractionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Configuration *common.ProtobufConfiguration `protobuf:"bytes,1,opt,name=configuration,proto3" json:"configuration,omitempty"`
}

func (x *FilterExtractionRequest) Reset() {
	*x = FilterExtractionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mde_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FilterExtractionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FilterExtractionRequest) ProtoMessage() {}

func (x *FilterExtractionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mde_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FilterExtractionRequest.ProtoReflect.Descriptor instead.
func (*FilterExtractionRequest) Descriptor() ([]byte, []int) {
	return file_mde_proto_rawDescGZIP(), []int{0}
}

func (x *FilterExtractionRequest) GetConfiguration() *common.ProtobufConfiguration {
	if x != nil {
		return x.Configuration
	}
	return nil
}

// Send back objects that can be used for selective extraction.
// In the first iteration the connector developer will be allowed to send back only Schemas.
type FilterExtractionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to FilterExtractionResponse:
	//	*FilterExtractionResponse_DatabaseCatalogId
	//	*FilterExtractionResponse_SchemaId
	//	*FilterExtractionResponse_TableId
	FilterExtractionResponse isFilterExtractionResponse_FilterExtractionResponse `protobuf_oneof:"FilterExtractionResponse"`
}

func (x *FilterExtractionResponse) Reset() {
	*x = FilterExtractionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mde_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FilterExtractionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FilterExtractionResponse) ProtoMessage() {}

func (x *FilterExtractionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_mde_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FilterExtractionResponse.ProtoReflect.Descriptor instead.
func (*FilterExtractionResponse) Descriptor() ([]byte, []int) {
	return file_mde_proto_rawDescGZIP(), []int{1}
}

func (m *FilterExtractionResponse) GetFilterExtractionResponse() isFilterExtractionResponse_FilterExtractionResponse {
	if m != nil {
		return m.FilterExtractionResponse
	}
	return nil
}

func (x *FilterExtractionResponse) GetDatabaseCatalogId() *mde_objects.DatabaseCatalogId {
	if x, ok := x.GetFilterExtractionResponse().(*FilterExtractionResponse_DatabaseCatalogId); ok {
		return x.DatabaseCatalogId
	}
	return nil
}

func (x *FilterExtractionResponse) GetSchemaId() *mde_objects.SchemaId {
	if x, ok := x.GetFilterExtractionResponse().(*FilterExtractionResponse_SchemaId); ok {
		return x.SchemaId
	}
	return nil
}

func (x *FilterExtractionResponse) GetTableId() *mde_objects.TableId {
	if x, ok := x.GetFilterExtractionResponse().(*FilterExtractionResponse_TableId); ok {
		return x.TableId
	}
	return nil
}

type isFilterExtractionResponse_FilterExtractionResponse interface {
	isFilterExtractionResponse_FilterExtractionResponse()
}

type FilterExtractionResponse_DatabaseCatalogId struct {
	DatabaseCatalogId *mde_objects.DatabaseCatalogId `protobuf:"bytes,1,opt,name=databaseCatalogId,proto3,oneof"`
}

type FilterExtractionResponse_SchemaId struct {
	SchemaId *mde_objects.SchemaId `protobuf:"bytes,2,opt,name=schemaId,proto3,oneof"`
}

type FilterExtractionResponse_TableId struct {
	TableId *mde_objects.TableId `protobuf:"bytes,3,opt,name=tableId,proto3,oneof"`
}

func (*FilterExtractionResponse_DatabaseCatalogId) isFilterExtractionResponse_FilterExtractionResponse() {
}

func (*FilterExtractionResponse_SchemaId) isFilterExtractionResponse_FilterExtractionResponse() {}

func (*FilterExtractionResponse_TableId) isFilterExtractionResponse_FilterExtractionResponse() {}

// --------------------------------------- Run full or selective extraction --------------------------------------
type MetadataExtractionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Configuration *common.ProtobufConfiguration `protobuf:"bytes,1,opt,name=configuration,proto3" json:"configuration,omitempty"`
	// There are three cases:
	// Empty filter: Run full extraction
	// Non empty filter and is_include_filter true: Extract metadata that are part of the filter
	// Non empty filter and is_include_filter false: Extract everything except for what is inside the filter.
	Filter          []*FilterExtractionResponse `protobuf:"bytes,2,rep,name=filter,proto3" json:"filter,omitempty"`
	IsIncludeFilter bool                        `protobuf:"varint,3,opt,name=is_include_filter,json=isIncludeFilter,proto3" json:"is_include_filter,omitempty"`
}

func (x *MetadataExtractionRequest) Reset() {
	*x = MetadataExtractionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mde_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MetadataExtractionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MetadataExtractionRequest) ProtoMessage() {}

func (x *MetadataExtractionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mde_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MetadataExtractionRequest.ProtoReflect.Descriptor instead.
func (*MetadataExtractionRequest) Descriptor() ([]byte, []int) {
	return file_mde_proto_rawDescGZIP(), []int{2}
}

func (x *MetadataExtractionRequest) GetConfiguration() *common.ProtobufConfiguration {
	if x != nil {
		return x.Configuration
	}
	return nil
}

func (x *MetadataExtractionRequest) GetFilter() []*FilterExtractionResponse {
	if x != nil {
		return x.Filter
	}
	return nil
}

func (x *MetadataExtractionRequest) GetIsIncludeFilter() bool {
	if x != nil {
		return x.IsIncludeFilter
	}
	return false
}

type ExtractionProgress struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to ExtractionProgress:
	//	*ExtractionProgress_Message
	//	*ExtractionProgress_CompletedOtype
	ExtractionProgress isExtractionProgress_ExtractionProgress `protobuf_oneof:"ExtractionProgress"`
}

func (x *ExtractionProgress) Reset() {
	*x = ExtractionProgress{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mde_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ExtractionProgress) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ExtractionProgress) ProtoMessage() {}

func (x *ExtractionProgress) ProtoReflect() protoreflect.Message {
	mi := &file_mde_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ExtractionProgress.ProtoReflect.Descriptor instead.
func (*ExtractionProgress) Descriptor() ([]byte, []int) {
	return file_mde_proto_rawDescGZIP(), []int{3}
}

func (m *ExtractionProgress) GetExtractionProgress() isExtractionProgress_ExtractionProgress {
	if m != nil {
		return m.ExtractionProgress
	}
	return nil
}

func (x *ExtractionProgress) GetMessage() string {
	if x, ok := x.GetExtractionProgress().(*ExtractionProgress_Message); ok {
		return x.Message
	}
	return ""
}

func (x *ExtractionProgress) GetCompletedOtype() mde_objects.Otype {
	if x, ok := x.GetExtractionProgress().(*ExtractionProgress_CompletedOtype); ok {
		return x.CompletedOtype
	}
	return mde_objects.Otype(0)
}

type isExtractionProgress_ExtractionProgress interface {
	isExtractionProgress_ExtractionProgress()
}

type ExtractionProgress_Message struct {
	// A simple message used to inform the end user on the progress of extraction.
	// The message should surfaced unmodified to the Job record.
	Message string `protobuf:"bytes,1,opt,name=message,proto3,oneof"`
}

type ExtractionProgress_CompletedOtype struct {
	// Used to inform ingestion that extraction of a specific object type has been completed.
	// Upon receiving the message, the ingestion module will flush the data to postgres, even if the
	// buckets are not full. This feature can be used to allow for showing gradually data to the end user
	CompletedOtype mde_objects.Otype `protobuf:"varint,2,opt,name=completedOtype,proto3,enum=rdbms.mde_objects.Otype,oneof"`
}

func (*ExtractionProgress_Message) isExtractionProgress_ExtractionProgress() {}

func (*ExtractionProgress_CompletedOtype) isExtractionProgress_ExtractionProgress() {}

type MetadataExtractionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to ExtractMetadataResponse:
	//	*MetadataExtractionResponse_DatabaseCatalog
	//	*MetadataExtractionResponse_Schema
	//	*MetadataExtractionResponse_Table
	//	*MetadataExtractionResponse_Column
	//	*MetadataExtractionResponse_Function
	//	*MetadataExtractionResponse_ExtractionProgress
	ExtractMetadataResponse isMetadataExtractionResponse_ExtractMetadataResponse `protobuf_oneof:"ExtractMetadataResponse"`
}

func (x *MetadataExtractionResponse) Reset() {
	*x = MetadataExtractionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mde_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *MetadataExtractionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MetadataExtractionResponse) ProtoMessage() {}

func (x *MetadataExtractionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_mde_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MetadataExtractionResponse.ProtoReflect.Descriptor instead.
func (*MetadataExtractionResponse) Descriptor() ([]byte, []int) {
	return file_mde_proto_rawDescGZIP(), []int{4}
}

func (m *MetadataExtractionResponse) GetExtractMetadataResponse() isMetadataExtractionResponse_ExtractMetadataResponse {
	if m != nil {
		return m.ExtractMetadataResponse
	}
	return nil
}

func (x *MetadataExtractionResponse) GetDatabaseCatalog() *mde_objects.DatabaseCatalog {
	if x, ok := x.GetExtractMetadataResponse().(*MetadataExtractionResponse_DatabaseCatalog); ok {
		return x.DatabaseCatalog
	}
	return nil
}

func (x *MetadataExtractionResponse) GetSchema() *mde_objects.Schema {
	if x, ok := x.GetExtractMetadataResponse().(*MetadataExtractionResponse_Schema); ok {
		return x.Schema
	}
	return nil
}

func (x *MetadataExtractionResponse) GetTable() *mde_objects.Table {
	if x, ok := x.GetExtractMetadataResponse().(*MetadataExtractionResponse_Table); ok {
		return x.Table
	}
	return nil
}

func (x *MetadataExtractionResponse) GetColumn() *mde_objects.Column {
	if x, ok := x.GetExtractMetadataResponse().(*MetadataExtractionResponse_Column); ok {
		return x.Column
	}
	return nil
}

func (x *MetadataExtractionResponse) GetFunction() *mde_objects.Function {
	if x, ok := x.GetExtractMetadataResponse().(*MetadataExtractionResponse_Function); ok {
		return x.Function
	}
	return nil
}

func (x *MetadataExtractionResponse) GetExtractionProgress() *ExtractionProgress {
	if x, ok := x.GetExtractMetadataResponse().(*MetadataExtractionResponse_ExtractionProgress); ok {
		return x.ExtractionProgress
	}
	return nil
}

type isMetadataExtractionResponse_ExtractMetadataResponse interface {
	isMetadataExtractionResponse_ExtractMetadataResponse()
}

type MetadataExtractionResponse_DatabaseCatalog struct {
	DatabaseCatalog *mde_objects.DatabaseCatalog `protobuf:"bytes,1,opt,name=databaseCatalog,proto3,oneof"`
}

type MetadataExtractionResponse_Schema struct {
	Schema *mde_objects.Schema `protobuf:"bytes,2,opt,name=schema,proto3,oneof"`
}

type MetadataExtractionResponse_Table struct {
	Table *mde_objects.Table `protobuf:"bytes,3,opt,name=table,proto3,oneof"`
}

type MetadataExtractionResponse_Column struct {
	Column *mde_objects.Column `protobuf:"bytes,4,opt,name=column,proto3,oneof"`
}

type MetadataExtractionResponse_Function struct {
	Function *mde_objects.Function `protobuf:"bytes,5,opt,name=function,proto3,oneof"`
}

type MetadataExtractionResponse_ExtractionProgress struct {
	ExtractionProgress *ExtractionProgress `protobuf:"bytes,6,opt,name=extractionProgress,proto3,oneof"`
}

func (*MetadataExtractionResponse_DatabaseCatalog) isMetadataExtractionResponse_ExtractMetadataResponse() {
}

func (*MetadataExtractionResponse_Schema) isMetadataExtractionResponse_ExtractMetadataResponse() {}

func (*MetadataExtractionResponse_Table) isMetadataExtractionResponse_ExtractMetadataResponse() {}

func (*MetadataExtractionResponse_Column) isMetadataExtractionResponse_ExtractMetadataResponse() {}

func (*MetadataExtractionResponse_Function) isMetadataExtractionResponse_ExtractMetadataResponse() {}

func (*MetadataExtractionResponse_ExtractionProgress) isMetadataExtractionResponse_ExtractMetadataResponse() {
}

// ------------------------------------- Extract metadata for a single table -------------------------------------
type TableExtractionRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Configuration *common.ProtobufConfiguration `protobuf:"bytes,1,opt,name=configuration,proto3" json:"configuration,omitempty"`
	TableId       *mde_objects.TableId          `protobuf:"bytes,2,opt,name=tableId,proto3" json:"tableId,omitempty"`
}

func (x *TableExtractionRequest) Reset() {
	*x = TableExtractionRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mde_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TableExtractionRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TableExtractionRequest) ProtoMessage() {}

func (x *TableExtractionRequest) ProtoReflect() protoreflect.Message {
	mi := &file_mde_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TableExtractionRequest.ProtoReflect.Descriptor instead.
func (*TableExtractionRequest) Descriptor() ([]byte, []int) {
	return file_mde_proto_rawDescGZIP(), []int{5}
}

func (x *TableExtractionRequest) GetConfiguration() *common.ProtobufConfiguration {
	if x != nil {
		return x.Configuration
	}
	return nil
}

func (x *TableExtractionRequest) GetTableId() *mde_objects.TableId {
	if x != nil {
		return x.TableId
	}
	return nil
}

type TableExtractionResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to TableExtractionResponse:
	//	*TableExtractionResponse_Table
	//	*TableExtractionResponse_Column
	TableExtractionResponse isTableExtractionResponse_TableExtractionResponse `protobuf_oneof:"TableExtractionResponse"`
}

func (x *TableExtractionResponse) Reset() {
	*x = TableExtractionResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_mde_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TableExtractionResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TableExtractionResponse) ProtoMessage() {}

func (x *TableExtractionResponse) ProtoReflect() protoreflect.Message {
	mi := &file_mde_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TableExtractionResponse.ProtoReflect.Descriptor instead.
func (*TableExtractionResponse) Descriptor() ([]byte, []int) {
	return file_mde_proto_rawDescGZIP(), []int{6}
}

func (m *TableExtractionResponse) GetTableExtractionResponse() isTableExtractionResponse_TableExtractionResponse {
	if m != nil {
		return m.TableExtractionResponse
	}
	return nil
}

func (x *TableExtractionResponse) GetTable() *mde_objects.Table {
	if x, ok := x.GetTableExtractionResponse().(*TableExtractionResponse_Table); ok {
		return x.Table
	}
	return nil
}

func (x *TableExtractionResponse) GetColumn() *mde_objects.Column {
	if x, ok := x.GetTableExtractionResponse().(*TableExtractionResponse_Column); ok {
		return x.Column
	}
	return nil
}

type isTableExtractionResponse_TableExtractionResponse interface {
	isTableExtractionResponse_TableExtractionResponse()
}

type TableExtractionResponse_Table struct {
	Table *mde_objects.Table `protobuf:"bytes,1,opt,name=table,proto3,oneof"`
}

type TableExtractionResponse_Column struct {
	Column *mde_objects.Column `protobuf:"bytes,2,opt,name=column,proto3,oneof"`
}

func (*TableExtractionResponse_Table) isTableExtractionResponse_TableExtractionResponse() {}

func (*TableExtractionResponse_Column) isTableExtractionResponse_TableExtractionResponse() {}

var File_mde_proto protoreflect.FileDescriptor

var file_mde_proto_rawDesc = []byte{
	0x0a, 0x09, 0x6d, 0x64, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x09, 0x72, 0x64, 0x62,
	0x6d, 0x73, 0x2e, 0x6d, 0x64, 0x65, 0x1a, 0x0c, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x11, 0x6d, 0x64, 0x65, 0x5f, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74,
	0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x64, 0x0a, 0x17, 0x46, 0x69, 0x6c, 0x74, 0x65,
	0x72, 0x45, 0x78, 0x74, 0x72, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x49, 0x0a, 0x0d, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x72, 0x64, 0x62, 0x6d,
	0x73, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75,
	0x66, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0d,
	0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0xff, 0x01,
	0x0a, 0x18, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x45, 0x78, 0x74, 0x72, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x54, 0x0a, 0x11, 0x64, 0x61,
	0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x43, 0x61, 0x74, 0x61, 0x6c, 0x6f, 0x67, 0x49, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x72, 0x64, 0x62, 0x6d, 0x73, 0x2e, 0x6d, 0x64,
	0x65, 0x5f, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x62, 0x61,
	0x73, 0x65, 0x43, 0x61, 0x74, 0x61, 0x6c, 0x6f, 0x67, 0x49, 0x64, 0x48, 0x00, 0x52, 0x11, 0x64,
	0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x43, 0x61, 0x74, 0x61, 0x6c, 0x6f, 0x67, 0x49, 0x64,
	0x12, 0x39, 0x0a, 0x08, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x72, 0x64, 0x62, 0x6d, 0x73, 0x2e, 0x6d, 0x64, 0x65, 0x5f, 0x6f,
	0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x2e, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x49, 0x64, 0x48,
	0x00, 0x52, 0x08, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x49, 0x64, 0x12, 0x36, 0x0a, 0x07, 0x74,
	0x61, 0x62, 0x6c, 0x65, 0x49, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x72,
	0x64, 0x62, 0x6d, 0x73, 0x2e, 0x6d, 0x64, 0x65, 0x5f, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x73,
	0x2e, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x49, 0x64, 0x48, 0x00, 0x52, 0x07, 0x74, 0x61, 0x62, 0x6c,
	0x65, 0x49, 0x64, 0x42, 0x1a, 0x0a, 0x18, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x45, 0x78, 0x74,
	0x72, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0xcf, 0x01, 0x0a, 0x19, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x45, 0x78, 0x74, 0x72,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x49, 0x0a,
	0x0d, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x72, 0x64, 0x62, 0x6d, 0x73, 0x2e, 0x63, 0x6f, 0x6d,
	0x6d, 0x6f, 0x6e, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x43, 0x6f, 0x6e, 0x66,
	0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0d, 0x63, 0x6f, 0x6e, 0x66, 0x69,
	0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x3b, 0x0a, 0x06, 0x66, 0x69, 0x6c, 0x74,
	0x65, 0x72, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x72, 0x64, 0x62, 0x6d, 0x73,
	0x2e, 0x6d, 0x64, 0x65, 0x2e, 0x46, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x45, 0x78, 0x74, 0x72, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x06, 0x66,
	0x69, 0x6c, 0x74, 0x65, 0x72, 0x12, 0x2a, 0x0a, 0x11, 0x69, 0x73, 0x5f, 0x69, 0x6e, 0x63, 0x6c,
	0x75, 0x64, 0x65, 0x5f, 0x66, 0x69, 0x6c, 0x74, 0x65, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x0f, 0x69, 0x73, 0x49, 0x6e, 0x63, 0x6c, 0x75, 0x64, 0x65, 0x46, 0x69, 0x6c, 0x74, 0x65,
	0x72, 0x22, 0x8a, 0x01, 0x0a, 0x12, 0x45, 0x78, 0x74, 0x72, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x50, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x12, 0x1a, 0x0a, 0x07, 0x6d, 0x65, 0x73, 0x73,
	0x61, 0x67, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x48, 0x00, 0x52, 0x07, 0x6d, 0x65, 0x73,
	0x73, 0x61, 0x67, 0x65, 0x12, 0x42, 0x0a, 0x0e, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65, 0x74, 0x65,
	0x64, 0x4f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x18, 0x2e, 0x72,
	0x64, 0x62, 0x6d, 0x73, 0x2e, 0x6d, 0x64, 0x65, 0x5f, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x73,
	0x2e, 0x4f, 0x74, 0x79, 0x70, 0x65, 0x48, 0x00, 0x52, 0x0e, 0x63, 0x6f, 0x6d, 0x70, 0x6c, 0x65,
	0x74, 0x65, 0x64, 0x4f, 0x74, 0x79, 0x70, 0x65, 0x42, 0x14, 0x0a, 0x12, 0x45, 0x78, 0x74, 0x72,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x22, 0xaf,
	0x03, 0x0a, 0x1a, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x45, 0x78, 0x74, 0x72, 0x61,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x4e, 0x0a,
	0x0f, 0x64, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x43, 0x61, 0x74, 0x61, 0x6c, 0x6f, 0x67,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x22, 0x2e, 0x72, 0x64, 0x62, 0x6d, 0x73, 0x2e, 0x6d,
	0x64, 0x65, 0x5f, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x2e, 0x44, 0x61, 0x74, 0x61, 0x62,
	0x61, 0x73, 0x65, 0x43, 0x61, 0x74, 0x61, 0x6c, 0x6f, 0x67, 0x48, 0x00, 0x52, 0x0f, 0x64, 0x61,
	0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x43, 0x61, 0x74, 0x61, 0x6c, 0x6f, 0x67, 0x12, 0x33, 0x0a,
	0x06, 0x73, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e,
	0x72, 0x64, 0x62, 0x6d, 0x73, 0x2e, 0x6d, 0x64, 0x65, 0x5f, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74,
	0x73, 0x2e, 0x53, 0x63, 0x68, 0x65, 0x6d, 0x61, 0x48, 0x00, 0x52, 0x06, 0x73, 0x63, 0x68, 0x65,
	0x6d, 0x61, 0x12, 0x30, 0x0a, 0x05, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x18, 0x2e, 0x72, 0x64, 0x62, 0x6d, 0x73, 0x2e, 0x6d, 0x64, 0x65, 0x5f, 0x6f, 0x62,
	0x6a, 0x65, 0x63, 0x74, 0x73, 0x2e, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x48, 0x00, 0x52, 0x05, 0x74,
	0x61, 0x62, 0x6c, 0x65, 0x12, 0x33, 0x0a, 0x06, 0x63, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x72, 0x64, 0x62, 0x6d, 0x73, 0x2e, 0x6d, 0x64, 0x65,
	0x5f, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x2e, 0x43, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x48,
	0x00, 0x52, 0x06, 0x63, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x12, 0x39, 0x0a, 0x08, 0x66, 0x75, 0x6e,
	0x63, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x72, 0x64,
	0x62, 0x6d, 0x73, 0x2e, 0x6d, 0x64, 0x65, 0x5f, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x2e,
	0x46, 0x75, 0x6e, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x48, 0x00, 0x52, 0x08, 0x66, 0x75, 0x6e, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x12, 0x4f, 0x0a, 0x12, 0x65, 0x78, 0x74, 0x72, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1d, 0x2e, 0x72, 0x64, 0x62, 0x6d, 0x73, 0x2e, 0x6d, 0x64, 0x65, 0x2e, 0x45, 0x78, 0x74,
	0x72, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x72, 0x6f, 0x67, 0x72, 0x65, 0x73, 0x73, 0x48,
	0x00, 0x52, 0x12, 0x65, 0x78, 0x74, 0x72, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x72, 0x6f,
	0x67, 0x72, 0x65, 0x73, 0x73, 0x42, 0x19, 0x0a, 0x17, 0x45, 0x78, 0x74, 0x72, 0x61, 0x63, 0x74,
	0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x22, 0x99, 0x01, 0x0a, 0x16, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x45, 0x78, 0x74, 0x72, 0x61, 0x63,
	0x74, 0x69, 0x6f, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x49, 0x0a, 0x0d, 0x63,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x23, 0x2e, 0x72, 0x64, 0x62, 0x6d, 0x73, 0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67,
	0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0d, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75,
	0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x34, 0x0a, 0x07, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x49,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x72, 0x64, 0x62, 0x6d, 0x73, 0x2e,
	0x6d, 0x64, 0x65, 0x5f, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x2e, 0x54, 0x61, 0x62, 0x6c,
	0x65, 0x49, 0x64, 0x52, 0x07, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x49, 0x64, 0x22, 0x9b, 0x01, 0x0a,
	0x17, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x45, 0x78, 0x74, 0x72, 0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x30, 0x0a, 0x05, 0x74, 0x61, 0x62, 0x6c,
	0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x72, 0x64, 0x62, 0x6d, 0x73, 0x2e,
	0x6d, 0x64, 0x65, 0x5f, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x2e, 0x54, 0x61, 0x62, 0x6c,
	0x65, 0x48, 0x00, 0x52, 0x05, 0x74, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x33, 0x0a, 0x06, 0x63, 0x6f,
	0x6c, 0x75, 0x6d, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x72, 0x64, 0x62,
	0x6d, 0x73, 0x2e, 0x6d, 0x64, 0x65, 0x5f, 0x6f, 0x62, 0x6a, 0x65, 0x63, 0x74, 0x73, 0x2e, 0x43,
	0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x48, 0x00, 0x52, 0x06, 0x63, 0x6f, 0x6c, 0x75, 0x6d, 0x6e, 0x42,
	0x19, 0x0a, 0x17, 0x54, 0x61, 0x62, 0x6c, 0x65, 0x45, 0x78, 0x74, 0x72, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x42, 0x47, 0x0a, 0x14, 0x61, 0x6c,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x6d,
	0x64, 0x65, 0x42, 0x12, 0x4d, 0x65, 0x74, 0x61, 0x64, 0x61, 0x74, 0x61, 0x45, 0x78, 0x74, 0x72,
	0x61, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x50, 0x01, 0x5a, 0x19, 0x61, 0x6c, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x6f, 0x63, 0x66, 0x2f, 0x72, 0x64, 0x62, 0x6d, 0x73, 0x2f,
	0x6d, 0x64, 0x65, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_mde_proto_rawDescOnce sync.Once
	file_mde_proto_rawDescData = file_mde_proto_rawDesc
)

func file_mde_proto_rawDescGZIP() []byte {
	file_mde_proto_rawDescOnce.Do(func() {
		file_mde_proto_rawDescData = protoimpl.X.CompressGZIP(file_mde_proto_rawDescData)
	})
	return file_mde_proto_rawDescData
}

var file_mde_proto_msgTypes = make([]protoimpl.MessageInfo, 7)
var file_mde_proto_goTypes = []interface{}{
	(*FilterExtractionRequest)(nil),       // 0: rdbms.mde.FilterExtractionRequest
	(*FilterExtractionResponse)(nil),      // 1: rdbms.mde.FilterExtractionResponse
	(*MetadataExtractionRequest)(nil),     // 2: rdbms.mde.MetadataExtractionRequest
	(*ExtractionProgress)(nil),            // 3: rdbms.mde.ExtractionProgress
	(*MetadataExtractionResponse)(nil),    // 4: rdbms.mde.MetadataExtractionResponse
	(*TableExtractionRequest)(nil),        // 5: rdbms.mde.TableExtractionRequest
	(*TableExtractionResponse)(nil),       // 6: rdbms.mde.TableExtractionResponse
	(*common.ProtobufConfiguration)(nil),  // 7: rdbms.common.ProtobufConfiguration
	(*mde_objects.DatabaseCatalogId)(nil), // 8: rdbms.mde_objects.DatabaseCatalogId
	(*mde_objects.SchemaId)(nil),          // 9: rdbms.mde_objects.SchemaId
	(*mde_objects.TableId)(nil),           // 10: rdbms.mde_objects.TableId
	(mde_objects.Otype)(0),                // 11: rdbms.mde_objects.Otype
	(*mde_objects.DatabaseCatalog)(nil),   // 12: rdbms.mde_objects.DatabaseCatalog
	(*mde_objects.Schema)(nil),            // 13: rdbms.mde_objects.Schema
	(*mde_objects.Table)(nil),             // 14: rdbms.mde_objects.Table
	(*mde_objects.Column)(nil),            // 15: rdbms.mde_objects.Column
	(*mde_objects.Function)(nil),          // 16: rdbms.mde_objects.Function
}
var file_mde_proto_depIdxs = []int32{
	7,  // 0: rdbms.mde.FilterExtractionRequest.configuration:type_name -> rdbms.common.ProtobufConfiguration
	8,  // 1: rdbms.mde.FilterExtractionResponse.databaseCatalogId:type_name -> rdbms.mde_objects.DatabaseCatalogId
	9,  // 2: rdbms.mde.FilterExtractionResponse.schemaId:type_name -> rdbms.mde_objects.SchemaId
	10, // 3: rdbms.mde.FilterExtractionResponse.tableId:type_name -> rdbms.mde_objects.TableId
	7,  // 4: rdbms.mde.MetadataExtractionRequest.configuration:type_name -> rdbms.common.ProtobufConfiguration
	1,  // 5: rdbms.mde.MetadataExtractionRequest.filter:type_name -> rdbms.mde.FilterExtractionResponse
	11, // 6: rdbms.mde.ExtractionProgress.completedOtype:type_name -> rdbms.mde_objects.Otype
	12, // 7: rdbms.mde.MetadataExtractionResponse.databaseCatalog:type_name -> rdbms.mde_objects.DatabaseCatalog
	13, // 8: rdbms.mde.MetadataExtractionResponse.schema:type_name -> rdbms.mde_objects.Schema
	14, // 9: rdbms.mde.MetadataExtractionResponse.table:type_name -> rdbms.mde_objects.Table
	15, // 10: rdbms.mde.MetadataExtractionResponse.column:type_name -> rdbms.mde_objects.Column
	16, // 11: rdbms.mde.MetadataExtractionResponse.function:type_name -> rdbms.mde_objects.Function
	3,  // 12: rdbms.mde.MetadataExtractionResponse.extractionProgress:type_name -> rdbms.mde.ExtractionProgress
	7,  // 13: rdbms.mde.TableExtractionRequest.configuration:type_name -> rdbms.common.ProtobufConfiguration
	10, // 14: rdbms.mde.TableExtractionRequest.tableId:type_name -> rdbms.mde_objects.TableId
	14, // 15: rdbms.mde.TableExtractionResponse.table:type_name -> rdbms.mde_objects.Table
	15, // 16: rdbms.mde.TableExtractionResponse.column:type_name -> rdbms.mde_objects.Column
	17, // [17:17] is the sub-list for method output_type
	17, // [17:17] is the sub-list for method input_type
	17, // [17:17] is the sub-list for extension type_name
	17, // [17:17] is the sub-list for extension extendee
	0,  // [0:17] is the sub-list for field type_name
}

func init() { file_mde_proto_init() }
func file_mde_proto_init() {
	if File_mde_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_mde_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FilterExtractionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mde_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FilterExtractionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mde_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MetadataExtractionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mde_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ExtractionProgress); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mde_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*MetadataExtractionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mde_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TableExtractionRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_mde_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TableExtractionResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_mde_proto_msgTypes[1].OneofWrappers = []interface{}{
		(*FilterExtractionResponse_DatabaseCatalogId)(nil),
		(*FilterExtractionResponse_SchemaId)(nil),
		(*FilterExtractionResponse_TableId)(nil),
	}
	file_mde_proto_msgTypes[3].OneofWrappers = []interface{}{
		(*ExtractionProgress_Message)(nil),
		(*ExtractionProgress_CompletedOtype)(nil),
	}
	file_mde_proto_msgTypes[4].OneofWrappers = []interface{}{
		(*MetadataExtractionResponse_DatabaseCatalog)(nil),
		(*MetadataExtractionResponse_Schema)(nil),
		(*MetadataExtractionResponse_Table)(nil),
		(*MetadataExtractionResponse_Column)(nil),
		(*MetadataExtractionResponse_Function)(nil),
		(*MetadataExtractionResponse_ExtractionProgress)(nil),
	}
	file_mde_proto_msgTypes[6].OneofWrappers = []interface{}{
		(*TableExtractionResponse_Table)(nil),
		(*TableExtractionResponse_Column)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_mde_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   7,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_mde_proto_goTypes,
		DependencyIndexes: file_mde_proto_depIdxs,
		MessageInfos:      file_mde_proto_msgTypes,
	}.Build()
	File_mde_proto = out.File
	file_mde_proto_rawDesc = nil
	file_mde_proto_goTypes = nil
	file_mde_proto_depIdxs = nil
}
