// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.27.1
// 	protoc        v3.6.1
// source: qle.proto

package qle

import (
	common "alation.com/ocf/rdbms/common"
	timestamp "github.com/golang/protobuf/ptypes/timestamp"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Request struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// configuration is the arbitrary mappings declared by a given
	// connector's manifest as being the configuration necessary for
	// procedures such as authentication, resource location, etc.
	Configuration    *common.ProtobufConfiguration `protobuf:"bytes,1,opt,name=configuration,proto3" json:"configuration,omitempty"`
	RunConfiguration *RunConfiguration             `protobuf:"bytes,2,opt,name=runConfiguration,proto3" json:"runConfiguration,omitempty"`
}

func (x *Request) Reset() {
	*x = Request{}
	if protoimpl.UnsafeEnabled {
		mi := &file_qle_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Request) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Request) ProtoMessage() {}

func (x *Request) ProtoReflect() protoreflect.Message {
	mi := &file_qle_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Request.ProtoReflect.Descriptor instead.
func (*Request) Descriptor() ([]byte, []int) {
	return file_qle_proto_rawDescGZIP(), []int{0}
}

func (x *Request) GetConfiguration() *common.ProtobufConfiguration {
	if x != nil {
		return x.Configuration
	}
	return nil
}

func (x *Request) GetRunConfiguration() *RunConfiguration {
	if x != nil {
		return x.RunConfiguration
	}
	return nil
}

// A RunConfiguration differs from the more general configuration in that
// it configures directly how Alation wants the connector to behave.
// For example, specifying a particular date range for extraction
// or including/excluding particular accounts.
type RunConfiguration struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Limit     uint64               `protobuf:"varint,1,opt,name=limit,proto3" json:"limit,omitempty"`
	StartTime *timestamp.Timestamp `protobuf:"bytes,2,opt,name=startTime,proto3" json:"startTime,omitempty"`
	EndTime   *timestamp.Timestamp `protobuf:"bytes,3,opt,name=endTime,proto3" json:"endTime,omitempty"`
}

func (x *RunConfiguration) Reset() {
	*x = RunConfiguration{}
	if protoimpl.UnsafeEnabled {
		mi := &file_qle_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *RunConfiguration) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RunConfiguration) ProtoMessage() {}

func (x *RunConfiguration) ProtoReflect() protoreflect.Message {
	mi := &file_qle_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RunConfiguration.ProtoReflect.Descriptor instead.
func (*RunConfiguration) Descriptor() ([]byte, []int) {
	return file_qle_proto_rawDescGZIP(), []int{1}
}

func (x *RunConfiguration) GetLimit() uint64 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *RunConfiguration) GetStartTime() *timestamp.Timestamp {
	if x != nil {
		return x.StartTime
	}
	return nil
}

func (x *RunConfiguration) GetEndTime() *timestamp.Timestamp {
	if x != nil {
		return x.EndTime
	}
	return nil
}

type Response struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// Types that are assignable to Response:
	//	*Response_Statement
	//	*Response_Result
	Response isResponse_Response `protobuf_oneof:"response"`
	// Unfortunately, in Python, there is no type switching
	// that we can do here to differentiate between a final result
	// and a query statement (it just builds both but leaves one default),
	// so for sanity sake we need to install a flag to let ourselves know
	// which on is which.
	IsResult bool `protobuf:"varint,3,opt,name=isResult,proto3" json:"isResult,omitempty"`
}

func (x *Response) Reset() {
	*x = Response{}
	if protoimpl.UnsafeEnabled {
		mi := &file_qle_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Response) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Response) ProtoMessage() {}

func (x *Response) ProtoReflect() protoreflect.Message {
	mi := &file_qle_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Response.ProtoReflect.Descriptor instead.
func (*Response) Descriptor() ([]byte, []int) {
	return file_qle_proto_rawDescGZIP(), []int{2}
}

func (m *Response) GetResponse() isResponse_Response {
	if m != nil {
		return m.Response
	}
	return nil
}

func (x *Response) GetStatement() *QueryStatement {
	if x, ok := x.GetResponse().(*Response_Statement); ok {
		return x.Statement
	}
	return nil
}

func (x *Response) GetResult() *FinalResult {
	if x, ok := x.GetResponse().(*Response_Result); ok {
		return x.Result
	}
	return nil
}

func (x *Response) GetIsResult() bool {
	if x != nil {
		return x.IsResult
	}
	return false
}

type isResponse_Response interface {
	isResponse_Response()
}

type Response_Statement struct {
	Statement *QueryStatement `protobuf:"bytes,1,opt,name=statement,proto3,oneof"`
}

type Response_Result struct {
	Result *FinalResult `protobuf:"bytes,2,opt,name=result,proto3,oneof"`
}

func (*Response_Statement) isResponse_Response() {}

func (*Response_Result) isResponse_Response() {}

// A FinalResult is everything that is NOT the stream of query statements.
// It includes information such as the total number of statements, the total
// number of statements per use account, and any number of warnings.
type FinalResult struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	StatementCount uint64            `protobuf:"varint,1,opt,name=statementCount,proto3" json:"statementCount,omitempty"`
	Accounts       map[string]uint64 `protobuf:"bytes,2,rep,name=accounts,proto3" json:"accounts,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"varint,2,opt,name=value,proto3"`
	Warnings       []string          `protobuf:"bytes,3,rep,name=warnings,proto3" json:"warnings,omitempty"`
}

func (x *FinalResult) Reset() {
	*x = FinalResult{}
	if protoimpl.UnsafeEnabled {
		mi := &file_qle_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *FinalResult) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FinalResult) ProtoMessage() {}

func (x *FinalResult) ProtoReflect() protoreflect.Message {
	mi := &file_qle_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FinalResult.ProtoReflect.Descriptor instead.
func (*FinalResult) Descriptor() ([]byte, []int) {
	return file_qle_proto_rawDescGZIP(), []int{3}
}

func (x *FinalResult) GetStatementCount() uint64 {
	if x != nil {
		return x.StatementCount
	}
	return 0
}

func (x *FinalResult) GetAccounts() map[string]uint64 {
	if x != nil {
		return x.Accounts
	}
	return nil
}

func (x *FinalResult) GetWarnings() []string {
	if x != nil {
		return x.Warnings
	}
	return nil
}

type QueryStatement struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserName         string               `protobuf:"bytes,1,opt,name=userName,proto3" json:"userName,omitempty"`
	Text             string               `protobuf:"bytes,2,opt,name=text,proto3" json:"text,omitempty"`
	DefaultDatabases string               `protobuf:"bytes,3,opt,name=defaultDatabases,proto3" json:"defaultDatabases,omitempty"`
	SessionId        string               `protobuf:"bytes,4,opt,name=sessionId,proto3" json:"sessionId,omitempty"`
	SessionStartTime *timestamp.Timestamp `protobuf:"bytes,5,opt,name=sessionStartTime,proto3" json:"sessionStartTime,omitempty"`
	StartTime        *timestamp.Timestamp `protobuf:"bytes,6,opt,name=startTime,proto3" json:"startTime,omitempty"`
	Cancelled        bool                 `protobuf:"varint,7,opt,name=cancelled,proto3" json:"cancelled,omitempty"`
	SecondsTaken     float32              `protobuf:"fixed32,8,opt,name=secondsTaken,proto3" json:"secondsTaken,omitempty"`
}

func (x *QueryStatement) Reset() {
	*x = QueryStatement{}
	if protoimpl.UnsafeEnabled {
		mi := &file_qle_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryStatement) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryStatement) ProtoMessage() {}

func (x *QueryStatement) ProtoReflect() protoreflect.Message {
	mi := &file_qle_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryStatement.ProtoReflect.Descriptor instead.
func (*QueryStatement) Descriptor() ([]byte, []int) {
	return file_qle_proto_rawDescGZIP(), []int{4}
}

func (x *QueryStatement) GetUserName() string {
	if x != nil {
		return x.UserName
	}
	return ""
}

func (x *QueryStatement) GetText() string {
	if x != nil {
		return x.Text
	}
	return ""
}

func (x *QueryStatement) GetDefaultDatabases() string {
	if x != nil {
		return x.DefaultDatabases
	}
	return ""
}

func (x *QueryStatement) GetSessionId() string {
	if x != nil {
		return x.SessionId
	}
	return ""
}

func (x *QueryStatement) GetSessionStartTime() *timestamp.Timestamp {
	if x != nil {
		return x.SessionStartTime
	}
	return nil
}

func (x *QueryStatement) GetStartTime() *timestamp.Timestamp {
	if x != nil {
		return x.StartTime
	}
	return nil
}

func (x *QueryStatement) GetCancelled() bool {
	if x != nil {
		return x.Cancelled
	}
	return false
}

func (x *QueryStatement) GetSecondsTaken() float32 {
	if x != nil {
		return x.SecondsTaken
	}
	return 0
}

var File_qle_proto protoreflect.FileDescriptor

var file_qle_proto_rawDesc = []byte{
	0x0a, 0x09, 0x71, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x09, 0x72, 0x64, 0x62,
	0x6d, 0x73, 0x2e, 0x71, 0x6c, 0x65, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d,
	0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0c, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x9d, 0x01, 0x0a, 0x07, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x49, 0x0a, 0x0d, 0x63, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x23, 0x2e, 0x72, 0x64, 0x62, 0x6d, 0x73,
	0x2e, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x50, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0d, 0x63,
	0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x47, 0x0a, 0x10,
	0x72, 0x75, 0x6e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1b, 0x2e, 0x72, 0x64, 0x62, 0x6d, 0x73, 0x2e, 0x71,
	0x6c, 0x65, 0x2e, 0x52, 0x75, 0x6e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74,
	0x69, 0x6f, 0x6e, 0x52, 0x10, 0x72, 0x75, 0x6e, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x75, 0x72,
	0x61, 0x74, 0x69, 0x6f, 0x6e, 0x22, 0x98, 0x01, 0x0a, 0x10, 0x52, 0x75, 0x6e, 0x43, 0x6f, 0x6e,
	0x66, 0x69, 0x67, 0x75, 0x72, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x69,
	0x6d, 0x69, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x6c, 0x69, 0x6d, 0x69, 0x74,
	0x12, 0x38, 0x0a, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52,
	0x09, 0x73, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x34, 0x0a, 0x07, 0x65, 0x6e,
	0x64, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x07, 0x65, 0x6e, 0x64, 0x54, 0x69, 0x6d, 0x65,
	0x22, 0x9f, 0x01, 0x0a, 0x08, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x39, 0x0a,
	0x09, 0x73, 0x74, 0x61, 0x74, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x19, 0x2e, 0x72, 0x64, 0x62, 0x6d, 0x73, 0x2e, 0x71, 0x6c, 0x65, 0x2e, 0x51, 0x75, 0x65,
	0x72, 0x79, 0x53, 0x74, 0x61, 0x74, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x48, 0x00, 0x52, 0x09, 0x73,
	0x74, 0x61, 0x74, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x30, 0x0a, 0x06, 0x72, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x72, 0x64, 0x62, 0x6d, 0x73,
	0x2e, 0x71, 0x6c, 0x65, 0x2e, 0x46, 0x69, 0x6e, 0x61, 0x6c, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74,
	0x48, 0x00, 0x52, 0x06, 0x72, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x69, 0x73,
	0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x08, 0x69, 0x73,
	0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x42, 0x0a, 0x0a, 0x08, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x22, 0xd0, 0x01, 0x0a, 0x0b, 0x46, 0x69, 0x6e, 0x61, 0x6c, 0x52, 0x65, 0x73, 0x75,
	0x6c, 0x74, 0x12, 0x26, 0x0a, 0x0e, 0x73, 0x74, 0x61, 0x74, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x43,
	0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0e, 0x73, 0x74, 0x61, 0x74,
	0x65, 0x6d, 0x65, 0x6e, 0x74, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x40, 0x0a, 0x08, 0x61, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x24, 0x2e, 0x72,
	0x64, 0x62, 0x6d, 0x73, 0x2e, 0x71, 0x6c, 0x65, 0x2e, 0x46, 0x69, 0x6e, 0x61, 0x6c, 0x52, 0x65,
	0x73, 0x75, 0x6c, 0x74, 0x2e, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x52, 0x08, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x73, 0x12, 0x1a, 0x0a, 0x08,
	0x77, 0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x09, 0x52, 0x08,
	0x77, 0x61, 0x72, 0x6e, 0x69, 0x6e, 0x67, 0x73, 0x1a, 0x3b, 0x0a, 0x0d, 0x41, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x73, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x14, 0x0a, 0x05, 0x76,
	0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x76, 0x61, 0x6c, 0x75,
	0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0xce, 0x02, 0x0a, 0x0e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x53,
	0x74, 0x61, 0x74, 0x65, 0x6d, 0x65, 0x6e, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72,
	0x4e, 0x61, 0x6d, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72,
	0x4e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x65, 0x78, 0x74, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x04, 0x74, 0x65, 0x78, 0x74, 0x12, 0x2a, 0x0a, 0x10, 0x64, 0x65, 0x66, 0x61,
	0x75, 0x6c, 0x74, 0x44, 0x61, 0x74, 0x61, 0x62, 0x61, 0x73, 0x65, 0x73, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x10, 0x64, 0x65, 0x66, 0x61, 0x75, 0x6c, 0x74, 0x44, 0x61, 0x74, 0x61, 0x62,
	0x61, 0x73, 0x65, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49,
	0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x49, 0x64, 0x12, 0x46, 0x0a, 0x10, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x53, 0x74, 0x61,
	0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x10, 0x73, 0x65, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x53, 0x74, 0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x38, 0x0a, 0x09, 0x73, 0x74,
	0x61, 0x72, 0x74, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x73, 0x74, 0x61, 0x72, 0x74,
	0x54, 0x69, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x6c, 0x65,
	0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x63, 0x61, 0x6e, 0x63, 0x65, 0x6c, 0x6c,
	0x65, 0x64, 0x12, 0x22, 0x0a, 0x0c, 0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64, 0x73, 0x54, 0x61, 0x6b,
	0x65, 0x6e, 0x18, 0x08, 0x20, 0x01, 0x28, 0x02, 0x52, 0x0c, 0x73, 0x65, 0x63, 0x6f, 0x6e, 0x64,
	0x73, 0x54, 0x61, 0x6b, 0x65, 0x6e, 0x42, 0x47, 0x0a, 0x14, 0x61, 0x6c, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x2e, 0x73, 0x64, 0x6b, 0x2e, 0x67, 0x72, 0x70, 0x63, 0x2e, 0x71, 0x6c, 0x65, 0x42, 0x12,
	0x51, 0x75, 0x65, 0x72, 0x79, 0x4c, 0x6f, 0x67, 0x45, 0x78, 0x74, 0x72, 0x61, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x50, 0x01, 0x5a, 0x19, 0x61, 0x6c, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x2e, 0x63, 0x6f,
	0x6d, 0x2f, 0x6f, 0x63, 0x66, 0x2f, 0x72, 0x64, 0x62, 0x6d, 0x73, 0x2f, 0x71, 0x6c, 0x65, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_qle_proto_rawDescOnce sync.Once
	file_qle_proto_rawDescData = file_qle_proto_rawDesc
)

func file_qle_proto_rawDescGZIP() []byte {
	file_qle_proto_rawDescOnce.Do(func() {
		file_qle_proto_rawDescData = protoimpl.X.CompressGZIP(file_qle_proto_rawDescData)
	})
	return file_qle_proto_rawDescData
}

var file_qle_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_qle_proto_goTypes = []interface{}{
	(*Request)(nil),                      // 0: rdbms.qle.Request
	(*RunConfiguration)(nil),             // 1: rdbms.qle.RunConfiguration
	(*Response)(nil),                     // 2: rdbms.qle.Response
	(*FinalResult)(nil),                  // 3: rdbms.qle.FinalResult
	(*QueryStatement)(nil),               // 4: rdbms.qle.QueryStatement
	nil,                                  // 5: rdbms.qle.FinalResult.AccountsEntry
	(*common.ProtobufConfiguration)(nil), // 6: rdbms.common.ProtobufConfiguration
	(*timestamp.Timestamp)(nil),          // 7: google.protobuf.Timestamp
}
var file_qle_proto_depIdxs = []int32{
	6, // 0: rdbms.qle.Request.configuration:type_name -> rdbms.common.ProtobufConfiguration
	1, // 1: rdbms.qle.Request.runConfiguration:type_name -> rdbms.qle.RunConfiguration
	7, // 2: rdbms.qle.RunConfiguration.startTime:type_name -> google.protobuf.Timestamp
	7, // 3: rdbms.qle.RunConfiguration.endTime:type_name -> google.protobuf.Timestamp
	4, // 4: rdbms.qle.Response.statement:type_name -> rdbms.qle.QueryStatement
	3, // 5: rdbms.qle.Response.result:type_name -> rdbms.qle.FinalResult
	5, // 6: rdbms.qle.FinalResult.accounts:type_name -> rdbms.qle.FinalResult.AccountsEntry
	7, // 7: rdbms.qle.QueryStatement.sessionStartTime:type_name -> google.protobuf.Timestamp
	7, // 8: rdbms.qle.QueryStatement.startTime:type_name -> google.protobuf.Timestamp
	9, // [9:9] is the sub-list for method output_type
	9, // [9:9] is the sub-list for method input_type
	9, // [9:9] is the sub-list for extension type_name
	9, // [9:9] is the sub-list for extension extendee
	0, // [0:9] is the sub-list for field type_name
}

func init() { file_qle_proto_init() }
func file_qle_proto_init() {
	if File_qle_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_qle_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Request); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_qle_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*RunConfiguration); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_qle_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Response); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_qle_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*FinalResult); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_qle_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryStatement); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	file_qle_proto_msgTypes[2].OneofWrappers = []interface{}{
		(*Response_Statement)(nil),
		(*Response_Result)(nil),
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_qle_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_qle_proto_goTypes,
		DependencyIndexes: file_qle_proto_depIdxs,
		MessageInfos:      file_qle_proto_msgTypes,
	}.Build()
	File_qle_proto = out.File
	file_qle_proto_rawDesc = nil
	file_qle_proto_goTypes = nil
	file_qle_proto_depIdxs = nil
}
