// Code generated by protoc-gen-go. DO NOT EDIT.
// source: rpc.proto

package rpc

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	empty "github.com/golang/protobuf/ptypes/empty"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Job struct {
	Method               string   `protobuf:"bytes,1,opt,name=method,proto3" json:"method,omitempty"`
	JobID                uint64   `protobuf:"varint,3,opt,name=jobID,proto3" json:"jobID,omitempty"`
	Connector            uint64   `protobuf:"varint,4,opt,name=connector,proto3" json:"connector,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Job) Reset()         { *m = Job{} }
func (m *Job) String() string { return proto.CompactTextString(m) }
func (*Job) ProtoMessage()    {}
func (*Job) Descriptor() ([]byte, []int) {
	return fileDescriptor_77a6da22d6a3feb1, []int{0}
}

func (m *Job) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Job.Unmarshal(m, b)
}
func (m *Job) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Job.Marshal(b, m, deterministic)
}
func (m *Job) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Job.Merge(m, src)
}
func (m *Job) XXX_Size() int {
	return xxx_messageInfo_Job.Size(m)
}
func (m *Job) XXX_DiscardUnknown() {
	xxx_messageInfo_Job.DiscardUnknown(m)
}

var xxx_messageInfo_Job proto.InternalMessageInfo

func (m *Job) GetMethod() string {
	if m != nil {
		return m.Method
	}
	return ""
}

func (m *Job) GetJobID() uint64 {
	if m != nil {
		return m.JobID
	}
	return 0
}

func (m *Job) GetConnector() uint64 {
	if m != nil {
		return m.Connector
	}
	return 0
}

type Body struct {
	Body                 []byte   `protobuf:"bytes,1,opt,name=body,proto3" json:"body,omitempty"`
	Error                *Error   `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
	EOF                  bool     `protobuf:"varint,3,opt,name=EOF,proto3" json:"EOF,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Body) Reset()         { *m = Body{} }
func (m *Body) String() string { return proto.CompactTextString(m) }
func (*Body) ProtoMessage()    {}
func (*Body) Descriptor() ([]byte, []int) {
	return fileDescriptor_77a6da22d6a3feb1, []int{1}
}

func (m *Body) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Body.Unmarshal(m, b)
}
func (m *Body) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Body.Marshal(b, m, deterministic)
}
func (m *Body) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Body.Merge(m, src)
}
func (m *Body) XXX_Size() int {
	return xxx_messageInfo_Body.Size(m)
}
func (m *Body) XXX_DiscardUnknown() {
	xxx_messageInfo_Body.DiscardUnknown(m)
}

var xxx_messageInfo_Body proto.InternalMessageInfo

func (m *Body) GetBody() []byte {
	if m != nil {
		return m.Body
	}
	return nil
}

func (m *Body) GetError() *Error {
	if m != nil {
		return m.Error
	}
	return nil
}

func (m *Body) GetEOF() bool {
	if m != nil {
		return m.EOF
	}
	return false
}

type Bodies struct {
	Bodies               [][]byte `protobuf:"bytes,1,rep,name=bodies,proto3" json:"bodies,omitempty"`
	Error                *Error   `protobuf:"bytes,2,opt,name=error,proto3" json:"error,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Bodies) Reset()         { *m = Bodies{} }
func (m *Bodies) String() string { return proto.CompactTextString(m) }
func (*Bodies) ProtoMessage()    {}
func (*Bodies) Descriptor() ([]byte, []int) {
	return fileDescriptor_77a6da22d6a3feb1, []int{2}
}

func (m *Bodies) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Bodies.Unmarshal(m, b)
}
func (m *Bodies) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Bodies.Marshal(b, m, deterministic)
}
func (m *Bodies) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Bodies.Merge(m, src)
}
func (m *Bodies) XXX_Size() int {
	return xxx_messageInfo_Bodies.Size(m)
}
func (m *Bodies) XXX_DiscardUnknown() {
	xxx_messageInfo_Bodies.DiscardUnknown(m)
}

var xxx_messageInfo_Bodies proto.InternalMessageInfo

func (m *Bodies) GetBodies() [][]byte {
	if m != nil {
		return m.Bodies
	}
	return nil
}

func (m *Bodies) GetError() *Error {
	if m != nil {
		return m.Error
	}
	return nil
}

type JobBatch struct {
	Body                 [][]byte `protobuf:"bytes,3,rep,name=body,proto3" json:"body,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *JobBatch) Reset()         { *m = JobBatch{} }
func (m *JobBatch) String() string { return proto.CompactTextString(m) }
func (*JobBatch) ProtoMessage()    {}
func (*JobBatch) Descriptor() ([]byte, []int) {
	return fileDescriptor_77a6da22d6a3feb1, []int{3}
}

func (m *JobBatch) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_JobBatch.Unmarshal(m, b)
}
func (m *JobBatch) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_JobBatch.Marshal(b, m, deterministic)
}
func (m *JobBatch) XXX_Merge(src proto.Message) {
	xxx_messageInfo_JobBatch.Merge(m, src)
}
func (m *JobBatch) XXX_Size() int {
	return xxx_messageInfo_JobBatch.Size(m)
}
func (m *JobBatch) XXX_DiscardUnknown() {
	xxx_messageInfo_JobBatch.DiscardUnknown(m)
}

var xxx_messageInfo_JobBatch proto.InternalMessageInfo

func (m *JobBatch) GetBody() [][]byte {
	if m != nil {
		return m.Body
	}
	return nil
}

type Error struct {
	Code                 uint32   `protobuf:"varint,1,opt,name=code,proto3" json:"code,omitempty"`
	Description          string   `protobuf:"bytes,2,opt,name=description,proto3" json:"description,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Error) Reset()         { *m = Error{} }
func (m *Error) String() string { return proto.CompactTextString(m) }
func (*Error) ProtoMessage()    {}
func (*Error) Descriptor() ([]byte, []int) {
	return fileDescriptor_77a6da22d6a3feb1, []int{4}
}

func (m *Error) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Error.Unmarshal(m, b)
}
func (m *Error) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Error.Marshal(b, m, deterministic)
}
func (m *Error) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Error.Merge(m, src)
}
func (m *Error) XXX_Size() int {
	return xxx_messageInfo_Error.Size(m)
}
func (m *Error) XXX_DiscardUnknown() {
	xxx_messageInfo_Error.DiscardUnknown(m)
}

var xxx_messageInfo_Error proto.InternalMessageInfo

func (m *Error) GetCode() uint32 {
	if m != nil {
		return m.Code
	}
	return 0
}

func (m *Error) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func init() {
	proto.RegisterType((*Job)(nil), "rpc.Job")
	proto.RegisterType((*Body)(nil), "rpc.Body")
	proto.RegisterType((*Bodies)(nil), "rpc.Bodies")
	proto.RegisterType((*JobBatch)(nil), "rpc.JobBatch")
	proto.RegisterType((*Error)(nil), "rpc.Error")
}

func init() { proto.RegisterFile("rpc.proto", fileDescriptor_77a6da22d6a3feb1) }

var fileDescriptor_77a6da22d6a3feb1 = []byte{
	// 324 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x84, 0x51, 0xbf, 0x4f, 0xe3, 0x30,
	0x14, 0xae, 0x2f, 0x49, 0xd5, 0xbc, 0xf4, 0xa4, 0x93, 0x75, 0x3a, 0x45, 0x3d, 0x84, 0xa2, 0x4c,
	0x61, 0x49, 0xab, 0x76, 0x66, 0x20, 0x50, 0xa4, 0x66, 0x00, 0xe1, 0x91, 0x2d, 0x76, 0x4c, 0x1a,
	0x68, 0xf3, 0x22, 0xd7, 0x0c, 0xfd, 0xef, 0x91, 0x5f, 0x0a, 0x65, 0x63, 0xfb, 0x7e, 0x58, 0xdf,
	0xfb, 0xf4, 0x19, 0x42, 0xd3, 0xab, 0xbc, 0x37, 0x68, 0x91, 0x7b, 0xa6, 0x57, 0xb3, 0xff, 0x0d,
	0x62, 0xb3, 0xd3, 0x73, 0x92, 0xe4, 0xfb, 0xcb, 0x5c, 0xef, 0x7b, 0x7b, 0x1c, 0x5e, 0xa4, 0x4f,
	0xe0, 0x95, 0x28, 0xf9, 0x3f, 0x18, 0xef, 0xb5, 0xdd, 0x62, 0x1d, 0xb3, 0x84, 0x65, 0xa1, 0x38,
	0x31, 0xfe, 0x17, 0x82, 0x57, 0x94, 0x9b, 0xbb, 0xd8, 0x4b, 0x58, 0xe6, 0x8b, 0x81, 0xf0, 0x0b,
	0x08, 0x15, 0x76, 0x9d, 0x56, 0x16, 0x4d, 0xec, 0x93, 0x73, 0x16, 0xd2, 0x07, 0xf0, 0x0b, 0xac,
	0x8f, 0x9c, 0x83, 0x2f, 0xb1, 0x3e, 0x52, 0xe2, 0x54, 0x10, 0xe6, 0x09, 0x04, 0xda, 0x18, 0x34,
	0xf1, 0xaf, 0x84, 0x65, 0xd1, 0x12, 0x72, 0xd7, 0x75, 0xed, 0x14, 0x31, 0x18, 0xfc, 0x0f, 0x78,
	0xeb, 0xc7, 0x7b, 0xba, 0x37, 0x11, 0x0e, 0xa6, 0x05, 0x8c, 0x0b, 0xac, 0x5b, 0x7d, 0x70, 0x2d,
	0x25, 0xa1, 0x98, 0x25, 0x5e, 0x36, 0x15, 0x27, 0xf6, 0x73, 0x6a, 0x7a, 0x09, 0x93, 0x12, 0x65,
	0x51, 0x59, 0xb5, 0xfd, 0xea, 0xe5, 0x51, 0x06, 0xe1, 0xf4, 0x1a, 0x02, 0x7a, 0xef, 0x4c, 0x85,
	0xb5, 0xa6, 0xd2, 0xbf, 0x05, 0x61, 0x9e, 0x40, 0x54, 0xeb, 0x83, 0x32, 0x6d, 0x6f, 0x5b, 0xec,
	0xe8, 0x48, 0x28, 0xbe, 0x4b, 0xcb, 0x06, 0x82, 0x9b, 0x46, 0x77, 0x96, 0xaf, 0x20, 0xda, 0x74,
	0xad, 0x6d, 0x2b, 0xab, 0x69, 0xd6, 0x7c, 0xd8, 0x3e, 0xff, 0xdc, 0x3e, 0x5f, 0xbb, 0xed, 0x67,
	0x13, 0x6a, 0x58, 0xa2, 0x4c, 0x47, 0x0b, 0xc6, 0xaf, 0x20, 0x2a, 0x51, 0xde, 0x56, 0xbb, 0x9d,
	0xac, 0xd4, 0x1b, 0x0f, 0xc9, 0x74, 0x13, 0xce, 0xce, 0x30, 0x1d, 0x65, 0x6c, 0xc1, 0x8a, 0xe0,
	0xd9, 0x7d, 0xa9, 0x1c, 0x53, 0xde, 0xea, 0x23, 0x00, 0x00, 0xff, 0xff, 0xd9, 0xca, 0xbb, 0xff,
	0xeb, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// AgentClient is the client API for Agent service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type AgentClient interface {
	InitiateJob(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (Agent_InitiateJobClient, error)
	JobCallback(ctx context.Context, opts ...grpc.CallOption) (Agent_JobCallbackClient, error)
}

type agentClient struct {
	cc *grpc.ClientConn
}

func NewAgentClient(cc *grpc.ClientConn) AgentClient {
	return &agentClient{cc}
}

func (c *agentClient) InitiateJob(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (Agent_InitiateJobClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Agent_serviceDesc.Streams[0], "/rpc.Agent/InitiateJob", opts...)
	if err != nil {
		return nil, err
	}
	x := &agentInitiateJobClient{stream}
	if err := x.ClientStream.SendMsg(in); err != nil {
		return nil, err
	}
	if err := x.ClientStream.CloseSend(); err != nil {
		return nil, err
	}
	return x, nil
}

type Agent_InitiateJobClient interface {
	Recv() (*Job, error)
	grpc.ClientStream
}

type agentInitiateJobClient struct {
	grpc.ClientStream
}

func (x *agentInitiateJobClient) Recv() (*Job, error) {
	m := new(Job)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

func (c *agentClient) JobCallback(ctx context.Context, opts ...grpc.CallOption) (Agent_JobCallbackClient, error) {
	stream, err := c.cc.NewStream(ctx, &_Agent_serviceDesc.Streams[1], "/rpc.Agent/JobCallback", opts...)
	if err != nil {
		return nil, err
	}
	x := &agentJobCallbackClient{stream}
	return x, nil
}

type Agent_JobCallbackClient interface {
	Send(*Body) error
	Recv() (*Body, error)
	grpc.ClientStream
}

type agentJobCallbackClient struct {
	grpc.ClientStream
}

func (x *agentJobCallbackClient) Send(m *Body) error {
	return x.ClientStream.SendMsg(m)
}

func (x *agentJobCallbackClient) Recv() (*Body, error) {
	m := new(Body)
	if err := x.ClientStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

// AgentServer is the server API for Agent service.
type AgentServer interface {
	InitiateJob(*empty.Empty, Agent_InitiateJobServer) error
	JobCallback(Agent_JobCallbackServer) error
}

// UnimplementedAgentServer can be embedded to have forward compatible implementations.
type UnimplementedAgentServer struct {
}

func (*UnimplementedAgentServer) InitiateJob(req *empty.Empty, srv Agent_InitiateJobServer) error {
	return status.Errorf(codes.Unimplemented, "method InitiateJob not implemented")
}
func (*UnimplementedAgentServer) JobCallback(srv Agent_JobCallbackServer) error {
	return status.Errorf(codes.Unimplemented, "method JobCallback not implemented")
}

func RegisterAgentServer(s *grpc.Server, srv AgentServer) {
	s.RegisterService(&_Agent_serviceDesc, srv)
}

func _Agent_InitiateJob_Handler(srv interface{}, stream grpc.ServerStream) error {
	m := new(empty.Empty)
	if err := stream.RecvMsg(m); err != nil {
		return err
	}
	return srv.(AgentServer).InitiateJob(m, &agentInitiateJobServer{stream})
}

type Agent_InitiateJobServer interface {
	Send(*Job) error
	grpc.ServerStream
}

type agentInitiateJobServer struct {
	grpc.ServerStream
}

func (x *agentInitiateJobServer) Send(m *Job) error {
	return x.ServerStream.SendMsg(m)
}

func _Agent_JobCallback_Handler(srv interface{}, stream grpc.ServerStream) error {
	return srv.(AgentServer).JobCallback(&agentJobCallbackServer{stream})
}

type Agent_JobCallbackServer interface {
	Send(*Body) error
	Recv() (*Body, error)
	grpc.ServerStream
}

type agentJobCallbackServer struct {
	grpc.ServerStream
}

func (x *agentJobCallbackServer) Send(m *Body) error {
	return x.ServerStream.SendMsg(m)
}

func (x *agentJobCallbackServer) Recv() (*Body, error) {
	m := new(Body)
	if err := x.ServerStream.RecvMsg(m); err != nil {
		return nil, err
	}
	return m, nil
}

var _Agent_serviceDesc = grpc.ServiceDesc{
	ServiceName: "rpc.Agent",
	HandlerType: (*AgentServer)(nil),
	Methods:     []grpc.MethodDesc{},
	Streams: []grpc.StreamDesc{
		{
			StreamName:    "InitiateJob",
			Handler:       _Agent_InitiateJob_Handler,
			ServerStreams: true,
		},
		{
			StreamName:    "JobCallback",
			Handler:       _Agent_JobCallback_Handler,
			ServerStreams: true,
			ClientStreams: true,
		},
	},
	Metadata: "rpc.proto",
}
