// Code generated by protoc-gen-go. DO NOT EDIT.
// source: pkg/protobuf/test.proto

package remoteAgent

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	_struct "github.com/golang/protobuf/ptypes/struct"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type ComplexPbType_Enumeration int32

const (
	ComplexPbType_VariantA ComplexPbType_Enumeration = 0
	ComplexPbType_VariantB ComplexPbType_Enumeration = 1
	ComplexPbType_VariantC ComplexPbType_Enumeration = 2
	ComplexPbType_VariantD ComplexPbType_Enumeration = 3
)

var ComplexPbType_Enumeration_name = map[int32]string{
	0: "VariantA",
	1: "VariantB",
	2: "VariantC",
	3: "VariantD",
}

var ComplexPbType_Enumeration_value = map[string]int32{
	"VariantA": 0,
	"VariantB": 1,
	"VariantC": 2,
	"VariantD": 3,
}

func (x ComplexPbType_Enumeration) String() string {
	return proto.EnumName(ComplexPbType_Enumeration_name, int32(x))
}

func (ComplexPbType_Enumeration) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_6641c415498ccafb, []int{2, 0}
}

type String struct {
	Message              string   `protobuf:"bytes,1,opt,name=message,proto3" json:"message,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *String) Reset()         { *m = String{} }
func (m *String) String() string { return proto.CompactTextString(m) }
func (*String) ProtoMessage()    {}
func (*String) Descriptor() ([]byte, []int) {
	return fileDescriptor_6641c415498ccafb, []int{0}
}

func (m *String) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_String.Unmarshal(m, b)
}
func (m *String) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_String.Marshal(b, m, deterministic)
}
func (m *String) XXX_Merge(src proto.Message) {
	xxx_messageInfo_String.Merge(m, src)
}
func (m *String) XXX_Size() int {
	return xxx_messageInfo_String.Size(m)
}
func (m *String) XXX_DiscardUnknown() {
	xxx_messageInfo_String.DiscardUnknown(m)
}

var xxx_messageInfo_String proto.InternalMessageInfo

func (m *String) GetMessage() string {
	if m != nil {
		return m.Message
	}
	return ""
}

type TestBytes struct {
	Body                 []byte   `protobuf:"bytes,1,opt,name=body,proto3" json:"body,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TestBytes) Reset()         { *m = TestBytes{} }
func (m *TestBytes) String() string { return proto.CompactTextString(m) }
func (*TestBytes) ProtoMessage()    {}
func (*TestBytes) Descriptor() ([]byte, []int) {
	return fileDescriptor_6641c415498ccafb, []int{1}
}

func (m *TestBytes) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TestBytes.Unmarshal(m, b)
}
func (m *TestBytes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TestBytes.Marshal(b, m, deterministic)
}
func (m *TestBytes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TestBytes.Merge(m, src)
}
func (m *TestBytes) XXX_Size() int {
	return xxx_messageInfo_TestBytes.Size(m)
}
func (m *TestBytes) XXX_DiscardUnknown() {
	xxx_messageInfo_TestBytes.DiscardUnknown(m)
}

var xxx_messageInfo_TestBytes proto.InternalMessageInfo

func (m *TestBytes) GetBody() []byte {
	if m != nil {
		return m.Body
	}
	return nil
}

// This attempts to roughly cover the gamut of Protobuf features and data types
// listed under https://developers.google.com/protocol-buffers/docs/proto3
type ComplexPbType struct {
	Scalar      uint64                    `protobuf:"fixed64,1,opt,name=scalar,proto3" json:"scalar,omitempty"`
	Array       []uint64                  `protobuf:"varint,2,rep,packed,name=array,proto3" json:"array,omitempty"`
	Enumeration ComplexPbType_Enumeration `protobuf:"varint,4,opt,name=enumeration,proto3,enum=test.ComplexPbType_Enumeration" json:"enumeration,omitempty"`
	Struct      *_struct.Struct           `protobuf:"bytes,5,opt,name=struct,proto3" json:"struct,omitempty"`
	Nested      *ComplexPbType_Nested     `protobuf:"bytes,6,opt,name=nested,proto3" json:"nested,omitempty"`
	// Types that are valid to be assigned to Oneof:
	//	*ComplexPbType_OneOfVariantA
	//	*ComplexPbType_OneOfVariantB
	Oneof                isComplexPbType_Oneof           `protobuf_oneof:"oneof"`
	Map                  map[int32]*ComplexPbType_Nested `protobuf:"bytes,9,rep,name=map,proto3" json:"map,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral struct{}                        `json:"-"`
	XXX_unrecognized     []byte                          `json:"-"`
	XXX_sizecache        int32                           `json:"-"`
}

func (m *ComplexPbType) Reset()         { *m = ComplexPbType{} }
func (m *ComplexPbType) String() string { return proto.CompactTextString(m) }
func (*ComplexPbType) ProtoMessage()    {}
func (*ComplexPbType) Descriptor() ([]byte, []int) {
	return fileDescriptor_6641c415498ccafb, []int{2}
}

func (m *ComplexPbType) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ComplexPbType.Unmarshal(m, b)
}
func (m *ComplexPbType) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ComplexPbType.Marshal(b, m, deterministic)
}
func (m *ComplexPbType) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ComplexPbType.Merge(m, src)
}
func (m *ComplexPbType) XXX_Size() int {
	return xxx_messageInfo_ComplexPbType.Size(m)
}
func (m *ComplexPbType) XXX_DiscardUnknown() {
	xxx_messageInfo_ComplexPbType.DiscardUnknown(m)
}

var xxx_messageInfo_ComplexPbType proto.InternalMessageInfo

func (m *ComplexPbType) GetScalar() uint64 {
	if m != nil {
		return m.Scalar
	}
	return 0
}

func (m *ComplexPbType) GetArray() []uint64 {
	if m != nil {
		return m.Array
	}
	return nil
}

func (m *ComplexPbType) GetEnumeration() ComplexPbType_Enumeration {
	if m != nil {
		return m.Enumeration
	}
	return ComplexPbType_VariantA
}

func (m *ComplexPbType) GetStruct() *_struct.Struct {
	if m != nil {
		return m.Struct
	}
	return nil
}

func (m *ComplexPbType) GetNested() *ComplexPbType_Nested {
	if m != nil {
		return m.Nested
	}
	return nil
}

type isComplexPbType_Oneof interface {
	isComplexPbType_Oneof()
}

type ComplexPbType_OneOfVariantA struct {
	OneOfVariantA string `protobuf:"bytes,7,opt,name=oneOfVariantA,proto3,oneof"`
}

type ComplexPbType_OneOfVariantB struct {
	OneOfVariantB int32 `protobuf:"varint,8,opt,name=oneOfVariantB,proto3,oneof"`
}

func (*ComplexPbType_OneOfVariantA) isComplexPbType_Oneof() {}

func (*ComplexPbType_OneOfVariantB) isComplexPbType_Oneof() {}

func (m *ComplexPbType) GetOneof() isComplexPbType_Oneof {
	if m != nil {
		return m.Oneof
	}
	return nil
}

func (m *ComplexPbType) GetOneOfVariantA() string {
	if x, ok := m.GetOneof().(*ComplexPbType_OneOfVariantA); ok {
		return x.OneOfVariantA
	}
	return ""
}

func (m *ComplexPbType) GetOneOfVariantB() int32 {
	if x, ok := m.GetOneof().(*ComplexPbType_OneOfVariantB); ok {
		return x.OneOfVariantB
	}
	return 0
}

func (m *ComplexPbType) GetMap() map[int32]*ComplexPbType_Nested {
	if m != nil {
		return m.Map
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*ComplexPbType) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*ComplexPbType_OneOfVariantA)(nil),
		(*ComplexPbType_OneOfVariantB)(nil),
	}
}

type ComplexPbType_Nested struct {
	Value                int32    `protobuf:"varint,1,opt,name=value,proto3" json:"value,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ComplexPbType_Nested) Reset()         { *m = ComplexPbType_Nested{} }
func (m *ComplexPbType_Nested) String() string { return proto.CompactTextString(m) }
func (*ComplexPbType_Nested) ProtoMessage()    {}
func (*ComplexPbType_Nested) Descriptor() ([]byte, []int) {
	return fileDescriptor_6641c415498ccafb, []int{2, 0}
}

func (m *ComplexPbType_Nested) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ComplexPbType_Nested.Unmarshal(m, b)
}
func (m *ComplexPbType_Nested) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ComplexPbType_Nested.Marshal(b, m, deterministic)
}
func (m *ComplexPbType_Nested) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ComplexPbType_Nested.Merge(m, src)
}
func (m *ComplexPbType_Nested) XXX_Size() int {
	return xxx_messageInfo_ComplexPbType_Nested.Size(m)
}
func (m *ComplexPbType_Nested) XXX_DiscardUnknown() {
	xxx_messageInfo_ComplexPbType_Nested.DiscardUnknown(m)
}

var xxx_messageInfo_ComplexPbType_Nested proto.InternalMessageInfo

func (m *ComplexPbType_Nested) GetValue() int32 {
	if m != nil {
		return m.Value
	}
	return 0
}

func init() {
	proto.RegisterEnum("test.ComplexPbType_Enumeration", ComplexPbType_Enumeration_name, ComplexPbType_Enumeration_value)
	proto.RegisterType((*String)(nil), "test.String")
	proto.RegisterType((*TestBytes)(nil), "test.TestBytes")
	proto.RegisterType((*ComplexPbType)(nil), "test.ComplexPbType")
	proto.RegisterMapType((map[int32]*ComplexPbType_Nested)(nil), "test.ComplexPbType.MapEntry")
	proto.RegisterType((*ComplexPbType_Nested)(nil), "test.ComplexPbType.Nested")
}

func init() { proto.RegisterFile("pkg/protobuf/test.proto", fileDescriptor_6641c415498ccafb) }

var fileDescriptor_6641c415498ccafb = []byte{
	// 542 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x93, 0x51, 0x6f, 0x93, 0x50,
	0x14, 0xc7, 0x4b, 0x4b, 0x59, 0x77, 0xda, 0x3a, 0x72, 0x35, 0x8e, 0x90, 0xc5, 0x11, 0x12, 0x0d,
	0x31, 0x91, 0x4d, 0x7c, 0x99, 0xfa, 0x34, 0x66, 0x13, 0x35, 0xd1, 0x2d, 0x74, 0xfa, 0xe0, 0xdb,
	0x6d, 0x7b, 0x4a, 0xc8, 0xe0, 0x5e, 0x72, 0xb9, 0x5d, 0xe4, 0x9b, 0xf8, 0x55, 0xfc, 0x76, 0x06,
	0x2e, 0x38, 0xb6, 0x34, 0xd6, 0xb7, 0xf3, 0xbf, 0xfc, 0xfe, 0x70, 0xfe, 0x87, 0x7b, 0xe0, 0x30,
	0xbf, 0x89, 0x4f, 0x72, 0xc1, 0x25, 0x5f, 0x6c, 0xd6, 0x27, 0x12, 0x0b, 0xe9, 0xd7, 0x8a, 0xe8,
	0x55, 0x6d, 0x1f, 0xc5, 0x9c, 0xc7, 0x29, 0xde, 0x11, 0x85, 0x14, 0x9b, 0x65, 0xc3, 0xb8, 0x2e,
	0x18, 0x73, 0x29, 0x12, 0x16, 0x13, 0x0b, 0xf6, 0x32, 0x2c, 0x0a, 0x1a, 0xa3, 0xa5, 0x39, 0x9a,
	0xb7, 0x1f, 0xb5, 0xd2, 0x3d, 0x86, 0xfd, 0x6b, 0x2c, 0x64, 0x58, 0x4a, 0x2c, 0x08, 0x01, 0x7d,
	0xc1, 0x57, 0x65, 0xcd, 0x4c, 0xa2, 0xba, 0x76, 0x7f, 0xeb, 0x30, 0xbd, 0xe0, 0x59, 0x9e, 0xe2,
	0xcf, 0xab, 0xc5, 0x75, 0x99, 0x23, 0x79, 0x0a, 0x46, 0xb1, 0xa4, 0x29, 0x15, 0x35, 0x67, 0x44,
	0x8d, 0x22, 0x4f, 0x60, 0x48, 0x85, 0xa0, 0xa5, 0xd5, 0x77, 0x06, 0x9e, 0x1e, 0x29, 0x41, 0xce,
	0x61, 0x8c, 0x6c, 0x93, 0xa1, 0xa0, 0x32, 0xe1, 0xcc, 0xd2, 0x1d, 0xcd, 0x7b, 0x14, 0x1c, 0xfb,
	0x75, 0x94, 0x7b, 0xef, 0xf5, 0x67, 0x77, 0x58, 0xd4, 0xf5, 0x90, 0x13, 0x30, 0x54, 0x2e, 0x6b,
	0xe8, 0x68, 0xde, 0x38, 0x38, 0xf4, 0x55, 0x6c, 0xbf, 0x8d, 0xed, 0xcf, 0xeb, 0xc7, 0x51, 0x83,
	0x91, 0x00, 0x0c, 0x86, 0x85, 0xc4, 0x95, 0x65, 0xd4, 0x06, 0x7b, 0xdb, 0xe7, 0xbe, 0xd6, 0x44,
	0xd4, 0x90, 0xe4, 0x05, 0x4c, 0x39, 0xc3, 0xcb, 0xf5, 0x77, 0x2a, 0x12, 0xca, 0xe4, 0xb9, 0xb5,
	0x57, 0x0d, 0xea, 0x63, 0x2f, 0xba, 0x7f, 0xfc, 0x90, 0x0b, 0xad, 0x91, 0xa3, 0x79, 0xc3, 0x87,
	0x5c, 0x48, 0x7c, 0x18, 0x64, 0x34, 0xb7, 0xf6, 0x9d, 0x81, 0x37, 0x0e, 0x8e, 0xb6, 0x35, 0xf0,
	0x85, 0xe6, 0x33, 0x26, 0x45, 0x19, 0x55, 0xa0, 0xfd, 0x0c, 0x0c, 0xd5, 0x51, 0x35, 0xc7, 0x5b,
	0x9a, 0x6e, 0xd4, 0xaf, 0x1a, 0x46, 0x4a, 0xd8, 0x11, 0x8c, 0x5a, 0x03, 0x31, 0x61, 0x70, 0x83,
	0x65, 0xf3, 0xbc, 0x2a, 0xc9, 0x69, 0xeb, 0xe9, 0xef, 0x0c, 0xac, 0xc0, 0x77, 0xfd, 0x33, 0xcd,
	0xbd, 0x84, 0x71, 0x67, 0xe8, 0x64, 0x02, 0xa3, 0x36, 0xa6, 0xd9, 0xeb, 0xa8, 0xd0, 0xd4, 0x3a,
	0xea, 0xc2, 0xec, 0x77, 0xd4, 0x07, 0x73, 0xf0, 0xb2, 0xad, 0x67, 0xe1, 0x1e, 0x0c, 0x39, 0x43,
	0xbe, 0xfe, 0xac, 0x8f, 0x56, 0x26, 0x0f, 0x7e, 0x0d, 0x40, 0xaf, 0x6e, 0x17, 0x79, 0x0e, 0xc3,
	0x6f, 0x8c, 0x8a, 0x92, 0x4c, 0x54, 0x63, 0xea, 0x5a, 0xda, 0xf7, 0x94, 0xdb, 0x23, 0x3e, 0x4c,
	0xe6, 0x28, 0x6e, 0x51, 0xcc, 0xa5, 0x40, 0x9a, 0xfd, 0x9b, 0x3e, 0xd5, 0x2a, 0xfe, 0x22, 0x4d,
	0x90, 0xc9, 0xff, 0xe1, 0x3d, 0x8d, 0xbc, 0x86, 0x69, 0x98, 0xac, 0x12, 0x81, 0xcb, 0x2a, 0x2f,
	0x4d, 0x77, 0x19, 0x4e, 0x35, 0x12, 0x80, 0xf9, 0x89, 0x49, 0x64, 0xca, 0x30, 0x13, 0x82, 0x8b,
	0x9d, 0x6d, 0xbd, 0x85, 0x71, 0x33, 0xf9, 0x7a, 0x5f, 0x1e, 0x6f, 0xf9, 0x19, 0xf6, 0xb6, 0x43,
	0xb7, 0x47, 0x5e, 0xc1, 0xf8, 0x0a, 0xc5, 0x9a, 0x8b, 0x8c, 0xb2, 0x25, 0xee, 0xfc, 0xd2, 0x19,
	0x98, 0x1d, 0x5c, 0x2d, 0xf1, 0x81, 0xa2, 0xfe, 0x6e, 0xb5, 0xfd, 0xf0, 0xa0, 0x72, 0x86, 0x07,
	0x3f, 0xa6, 0xfe, 0x7b, 0x81, 0x19, 0x97, 0x78, 0x1e, 0x23, 0x93, 0x0b, 0xa3, 0x5e, 0xa6, 0x37,
	0x7f, 0x02, 0x00, 0x00, 0xff, 0xff, 0x76, 0x0b, 0xee, 0x0e, 0x72, 0x04, 0x00, 0x00,
}
