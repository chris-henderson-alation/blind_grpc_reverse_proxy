// Code generated by protoc-gen-go. DO NOT EDIT.
// source: rpc.proto

package rpc

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	empty "github.com/golang/protobuf/ptypes/empty"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type GrpcCallType int32

const (
	GrpcCallType_Unary               GrpcCallType = 0
	GrpcCallType_ServerStream        GrpcCallType = 1
	GrpcCallType_ClientStream        GrpcCallType = 2
	GrpcCallType_BiDirectionalStream GrpcCallType = 3
)

var GrpcCallType_name = map[int32]string{
	0: "Unary",
	1: "ServerStream",
	2: "ClientStream",
	3: "BiDirectionalStream",
}

var GrpcCallType_value = map[string]int32{
	"Unary":               0,
	"ServerStream":        1,
	"ClientStream":        2,
	"BiDirectionalStream": 3,
}

func (x GrpcCallType) String() string {
	return proto.EnumName(GrpcCallType_name, int32(x))
}

func (GrpcCallType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_77a6da22d6a3feb1, []int{0}
}

type PushStreamItem struct {
	Headers              *Headers         `protobuf:"bytes,1,opt,name=headers,proto3" json:"headers,omitempty"`
	Sequence             uint64           `protobuf:"varint,2,opt,name=sequence,proto3" json:"sequence,omitempty"`
	Body                 []*EncryptedBody `protobuf:"bytes,3,rep,name=body,proto3" json:"body,omitempty"`
	XXX_NoUnkeyedLiteral struct{}         `json:"-"`
	XXX_unrecognized     []byte           `json:"-"`
	XXX_sizecache        int32            `json:"-"`
}

func (m *PushStreamItem) Reset()         { *m = PushStreamItem{} }
func (m *PushStreamItem) String() string { return proto.CompactTextString(m) }
func (*PushStreamItem) ProtoMessage()    {}
func (*PushStreamItem) Descriptor() ([]byte, []int) {
	return fileDescriptor_77a6da22d6a3feb1, []int{0}
}

func (m *PushStreamItem) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_PushStreamItem.Unmarshal(m, b)
}
func (m *PushStreamItem) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_PushStreamItem.Marshal(b, m, deterministic)
}
func (m *PushStreamItem) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PushStreamItem.Merge(m, src)
}
func (m *PushStreamItem) XXX_Size() int {
	return xxx_messageInfo_PushStreamItem.Size(m)
}
func (m *PushStreamItem) XXX_DiscardUnknown() {
	xxx_messageInfo_PushStreamItem.DiscardUnknown(m)
}

var xxx_messageInfo_PushStreamItem proto.InternalMessageInfo

func (m *PushStreamItem) GetHeaders() *Headers {
	if m != nil {
		return m.Headers
	}
	return nil
}

func (m *PushStreamItem) GetSequence() uint64 {
	if m != nil {
		return m.Sequence
	}
	return 0
}

func (m *PushStreamItem) GetBody() []*EncryptedBody {
	if m != nil {
		return m.Body
	}
	return nil
}

type JobOptional struct {
	// Types that are valid to be assigned to Options:
	//	*JobOptional_Job
	//	*JobOptional_Nothing
	Options              isJobOptional_Options `protobuf_oneof:"options"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *JobOptional) Reset()         { *m = JobOptional{} }
func (m *JobOptional) String() string { return proto.CompactTextString(m) }
func (*JobOptional) ProtoMessage()    {}
func (*JobOptional) Descriptor() ([]byte, []int) {
	return fileDescriptor_77a6da22d6a3feb1, []int{1}
}

func (m *JobOptional) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_JobOptional.Unmarshal(m, b)
}
func (m *JobOptional) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_JobOptional.Marshal(b, m, deterministic)
}
func (m *JobOptional) XXX_Merge(src proto.Message) {
	xxx_messageInfo_JobOptional.Merge(m, src)
}
func (m *JobOptional) XXX_Size() int {
	return xxx_messageInfo_JobOptional.Size(m)
}
func (m *JobOptional) XXX_DiscardUnknown() {
	xxx_messageInfo_JobOptional.DiscardUnknown(m)
}

var xxx_messageInfo_JobOptional proto.InternalMessageInfo

type isJobOptional_Options interface {
	isJobOptional_Options()
}

type JobOptional_Job struct {
	Job *Job `protobuf:"bytes,1,opt,name=job,proto3,oneof"`
}

type JobOptional_Nothing struct {
	Nothing *empty.Empty `protobuf:"bytes,2,opt,name=nothing,proto3,oneof"`
}

func (*JobOptional_Job) isJobOptional_Options() {}

func (*JobOptional_Nothing) isJobOptional_Options() {}

func (m *JobOptional) GetOptions() isJobOptional_Options {
	if m != nil {
		return m.Options
	}
	return nil
}

func (m *JobOptional) GetJob() *Job {
	if x, ok := m.GetOptions().(*JobOptional_Job); ok {
		return x.Job
	}
	return nil
}

func (m *JobOptional) GetNothing() *empty.Empty {
	if x, ok := m.GetOptions().(*JobOptional_Nothing); ok {
		return x.Nothing
	}
	return nil
}

// XXX_OneofWrappers is for the internal use of the proto package.
func (*JobOptional) XXX_OneofWrappers() []interface{} {
	return []interface{}{
		(*JobOptional_Job)(nil),
		(*JobOptional_Nothing)(nil),
	}
}

type Job struct {
	Headers              *Headers       `protobuf:"bytes,1,opt,name=headers,proto3" json:"headers,omitempty"`
	Body                 *EncryptedBody `protobuf:"bytes,2,opt,name=body,proto3" json:"body,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *Job) Reset()         { *m = Job{} }
func (m *Job) String() string { return proto.CompactTextString(m) }
func (*Job) ProtoMessage()    {}
func (*Job) Descriptor() ([]byte, []int) {
	return fileDescriptor_77a6da22d6a3feb1, []int{2}
}

func (m *Job) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Job.Unmarshal(m, b)
}
func (m *Job) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Job.Marshal(b, m, deterministic)
}
func (m *Job) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Job.Merge(m, src)
}
func (m *Job) XXX_Size() int {
	return xxx_messageInfo_Job.Size(m)
}
func (m *Job) XXX_DiscardUnknown() {
	xxx_messageInfo_Job.DiscardUnknown(m)
}

var xxx_messageInfo_Job proto.InternalMessageInfo

func (m *Job) GetHeaders() *Headers {
	if m != nil {
		return m.Headers
	}
	return nil
}

func (m *Job) GetBody() *EncryptedBody {
	if m != nil {
		return m.Body
	}
	return nil
}

type EncryptedBody struct {
	Ciphertext           []byte   `protobuf:"bytes,2,opt,name=ciphertext,proto3" json:"ciphertext,omitempty"`
	Nonce                []byte   `protobuf:"bytes,3,opt,name=nonce,proto3" json:"nonce,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EncryptedBody) Reset()         { *m = EncryptedBody{} }
func (m *EncryptedBody) String() string { return proto.CompactTextString(m) }
func (*EncryptedBody) ProtoMessage()    {}
func (*EncryptedBody) Descriptor() ([]byte, []int) {
	return fileDescriptor_77a6da22d6a3feb1, []int{3}
}

func (m *EncryptedBody) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EncryptedBody.Unmarshal(m, b)
}
func (m *EncryptedBody) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EncryptedBody.Marshal(b, m, deterministic)
}
func (m *EncryptedBody) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EncryptedBody.Merge(m, src)
}
func (m *EncryptedBody) XXX_Size() int {
	return xxx_messageInfo_EncryptedBody.Size(m)
}
func (m *EncryptedBody) XXX_DiscardUnknown() {
	xxx_messageInfo_EncryptedBody.DiscardUnknown(m)
}

var xxx_messageInfo_EncryptedBody proto.InternalMessageInfo

func (m *EncryptedBody) GetCiphertext() []byte {
	if m != nil {
		return m.Ciphertext
	}
	return nil
}

func (m *EncryptedBody) GetNonce() []byte {
	if m != nil {
		return m.Nonce
	}
	return nil
}

type Headers struct {
	Method               string       `protobuf:"bytes,1,opt,name=Method,proto3" json:"Method,omitempty"`
	Type                 GrpcCallType `protobuf:"varint,2,opt,name=type,proto3,enum=rpc.GrpcCallType" json:"type,omitempty"`
	JobID                uint64       `protobuf:"varint,3,opt,name=jobID,proto3" json:"jobID,omitempty"`
	Connector            uint64       `protobuf:"varint,4,opt,name=connector,proto3" json:"connector,omitempty"`
	XXX_NoUnkeyedLiteral struct{}     `json:"-"`
	XXX_unrecognized     []byte       `json:"-"`
	XXX_sizecache        int32        `json:"-"`
}

func (m *Headers) Reset()         { *m = Headers{} }
func (m *Headers) String() string { return proto.CompactTextString(m) }
func (*Headers) ProtoMessage()    {}
func (*Headers) Descriptor() ([]byte, []int) {
	return fileDescriptor_77a6da22d6a3feb1, []int{4}
}

func (m *Headers) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Headers.Unmarshal(m, b)
}
func (m *Headers) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Headers.Marshal(b, m, deterministic)
}
func (m *Headers) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Headers.Merge(m, src)
}
func (m *Headers) XXX_Size() int {
	return xxx_messageInfo_Headers.Size(m)
}
func (m *Headers) XXX_DiscardUnknown() {
	xxx_messageInfo_Headers.DiscardUnknown(m)
}

var xxx_messageInfo_Headers proto.InternalMessageInfo

func (m *Headers) GetMethod() string {
	if m != nil {
		return m.Method
	}
	return ""
}

func (m *Headers) GetType() GrpcCallType {
	if m != nil {
		return m.Type
	}
	return GrpcCallType_Unary
}

func (m *Headers) GetJobID() uint64 {
	if m != nil {
		return m.JobID
	}
	return 0
}

func (m *Headers) GetConnector() uint64 {
	if m != nil {
		return m.Connector
	}
	return 0
}

func init() {
	proto.RegisterEnum("rpc.GrpcCallType", GrpcCallType_name, GrpcCallType_value)
	proto.RegisterType((*PushStreamItem)(nil), "rpc.PushStreamItem")
	proto.RegisterType((*JobOptional)(nil), "rpc.JobOptional")
	proto.RegisterType((*Job)(nil), "rpc.Job")
	proto.RegisterType((*EncryptedBody)(nil), "rpc.EncryptedBody")
	proto.RegisterType((*Headers)(nil), "rpc.Headers")
}

func init() { proto.RegisterFile("rpc.proto", fileDescriptor_77a6da22d6a3feb1) }

var fileDescriptor_77a6da22d6a3feb1 = []byte{
	// 453 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x53, 0xc1, 0x6a, 0xdb, 0x40,
	0x10, 0x95, 0x23, 0x39, 0xb2, 0xc6, 0x6e, 0x70, 0x37, 0x25, 0x35, 0x6e, 0x28, 0x46, 0xd0, 0x60,
	0x7a, 0x50, 0x40, 0xa5, 0xa7, 0xde, 0x9c, 0x98, 0x3a, 0x86, 0xd2, 0xa0, 0x34, 0x3d, 0xf4, 0x26,
	0xad, 0xa6, 0x96, 0x8c, 0xbc, 0xb3, 0x5d, 0xaf, 0x4b, 0x05, 0xa1, 0xdf, 0x5e, 0xb4, 0x92, 0x9a,
	0xf8, 0x60, 0xc8, 0x71, 0xde, 0x9b, 0x79, 0x33, 0x6f, 0x67, 0x16, 0x3c, 0x25, 0x79, 0x20, 0x15,
	0x69, 0x62, 0xb6, 0x92, 0x7c, 0xfc, 0x66, 0x45, 0xb4, 0x2a, 0xf0, 0xd2, 0x40, 0xc9, 0xee, 0xe7,
	0x25, 0x6e, 0xa4, 0x2e, 0xeb, 0x0c, 0xff, 0x01, 0x4e, 0x6e, 0x77, 0xdb, 0xec, 0x4e, 0x2b, 0x8c,
	0x37, 0x37, 0x1a, 0x37, 0xec, 0x02, 0xdc, 0x0c, 0xe3, 0x14, 0xd5, 0x76, 0xd4, 0x99, 0x74, 0xa6,
	0xfd, 0x70, 0x10, 0x54, 0x82, 0x8b, 0x1a, 0x8b, 0x5a, 0x92, 0x8d, 0xa1, 0xb7, 0xc5, 0x5f, 0x3b,
	0x14, 0x1c, 0x47, 0x47, 0x93, 0xce, 0xd4, 0x89, 0xfe, 0xc7, 0xec, 0x02, 0x9c, 0x84, 0xd2, 0x72,
	0x64, 0x4f, 0xec, 0x69, 0x3f, 0x64, 0x46, 0x60, 0x2e, 0xb8, 0x2a, 0xa5, 0xc6, 0x74, 0x46, 0x69,
	0x19, 0x19, 0xde, 0x5f, 0x43, 0x7f, 0x49, 0xc9, 0x57, 0xa9, 0x73, 0x12, 0x71, 0xc1, 0xce, 0xc1,
	0x5e, 0x53, 0xd2, 0xb4, 0xed, 0x99, 0xaa, 0x25, 0x25, 0x0b, 0x2b, 0xaa, 0x60, 0x16, 0x82, 0x2b,
	0x48, 0x67, 0xb9, 0x58, 0x99, 0x7e, 0xfd, 0xf0, 0x2c, 0xa8, 0x9d, 0x05, 0xad, 0xb3, 0x60, 0x5e,
	0x39, 0x5b, 0x58, 0x51, 0x9b, 0x38, 0xf3, 0xc0, 0x25, 0xa3, 0xbe, 0xf5, 0xef, 0xc1, 0x5e, 0x52,
	0xf2, 0x6c, 0x7b, 0xad, 0x85, 0xba, 0xd5, 0x61, 0x0b, 0x73, 0x78, 0xb1, 0x07, 0xb3, 0xb7, 0x00,
	0x3c, 0x97, 0x19, 0x2a, 0x8d, 0x7f, 0xb4, 0x29, 0x1f, 0x44, 0x4f, 0x10, 0xf6, 0x0a, 0xba, 0x82,
	0xaa, 0x47, 0xb3, 0x0d, 0x55, 0x07, 0xfe, 0x03, 0xb8, 0xcd, 0x08, 0xec, 0x0c, 0x8e, 0xbf, 0xa0,
	0xce, 0x28, 0x35, 0x03, 0x7a, 0x51, 0x13, 0xb1, 0x77, 0xe0, 0xe8, 0x52, 0xd6, 0x8f, 0x7d, 0x12,
	0xbe, 0x34, 0x13, 0x7d, 0x56, 0x92, 0x5f, 0xc5, 0x45, 0xf1, 0xad, 0x94, 0x18, 0x19, 0xba, 0xd2,
	0x5f, 0x53, 0x72, 0x73, 0x6d, 0xf4, 0x9d, 0xa8, 0x0e, 0xd8, 0x39, 0x78, 0x9c, 0x84, 0x40, 0xae,
	0x49, 0x8d, 0x1c, 0xc3, 0x3c, 0x02, 0xef, 0xbf, 0xc3, 0xe0, 0xa9, 0x12, 0xf3, 0xa0, 0x7b, 0x2f,
	0x62, 0x55, 0x0e, 0x2d, 0x36, 0x84, 0xc1, 0x1d, 0xaa, 0xdf, 0xa8, 0xea, 0x13, 0x19, 0x76, 0x2a,
	0xe4, 0xaa, 0xc8, 0x51, 0xe8, 0x06, 0x39, 0x62, 0xaf, 0xe1, 0x74, 0x96, 0x5f, 0xe7, 0x0a, 0x79,
	0xbd, 0xc8, 0x86, 0xb0, 0xc3, 0xbf, 0xd0, 0xab, 0x8a, 0x73, 0x8e, 0x8a, 0x7d, 0x04, 0xf7, 0x96,
	0x8a, 0xa2, 0xda, 0xc1, 0x81, 0xc5, 0x8d, 0x87, 0xed, 0xca, 0xdb, 0x8b, 0xf0, 0x2d, 0xf6, 0x09,
	0xe0, 0xf1, 0x40, 0xd9, 0xa9, 0xc9, 0xd8, 0xbf, 0xd8, 0xf1, 0x01, 0x39, 0xdf, 0x9a, 0x75, 0x7f,
	0x54, 0x3f, 0x20, 0x39, 0x36, 0xc4, 0x87, 0x7f, 0x01, 0x00, 0x00, 0xff, 0xff, 0x52, 0x1b, 0x44,
	0xfb, 0x1a, 0x03, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// ServicerClient is the client API for Servicer service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type ServicerClient interface {
	PollJob(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*JobOptional, error)
	PushStream(ctx context.Context, in *PushStreamItem, opts ...grpc.CallOption) (*empty.Empty, error)
}

type servicerClient struct {
	cc *grpc.ClientConn
}

func NewServicerClient(cc *grpc.ClientConn) ServicerClient {
	return &servicerClient{cc}
}

func (c *servicerClient) PollJob(ctx context.Context, in *empty.Empty, opts ...grpc.CallOption) (*JobOptional, error) {
	out := new(JobOptional)
	err := c.cc.Invoke(ctx, "/rpc.Servicer/PollJob", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *servicerClient) PushStream(ctx context.Context, in *PushStreamItem, opts ...grpc.CallOption) (*empty.Empty, error) {
	out := new(empty.Empty)
	err := c.cc.Invoke(ctx, "/rpc.Servicer/PushStream", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// ServicerServer is the server API for Servicer service.
type ServicerServer interface {
	PollJob(context.Context, *empty.Empty) (*JobOptional, error)
	PushStream(context.Context, *PushStreamItem) (*empty.Empty, error)
}

// UnimplementedServicerServer can be embedded to have forward compatible implementations.
type UnimplementedServicerServer struct {
}

func (*UnimplementedServicerServer) PollJob(ctx context.Context, req *empty.Empty) (*JobOptional, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PollJob not implemented")
}
func (*UnimplementedServicerServer) PushStream(ctx context.Context, req *PushStreamItem) (*empty.Empty, error) {
	return nil, status.Errorf(codes.Unimplemented, "method PushStream not implemented")
}

func RegisterServicerServer(s *grpc.Server, srv ServicerServer) {
	s.RegisterService(&_Servicer_serviceDesc, srv)
}

func _Servicer_PollJob_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(empty.Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ServicerServer).PollJob(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpc.Servicer/PollJob",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ServicerServer).PollJob(ctx, req.(*empty.Empty))
	}
	return interceptor(ctx, in, info, handler)
}

func _Servicer_PushStream_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(PushStreamItem)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ServicerServer).PushStream(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/rpc.Servicer/PushStream",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ServicerServer).PushStream(ctx, req.(*PushStreamItem))
	}
	return interceptor(ctx, in, info, handler)
}

var _Servicer_serviceDesc = grpc.ServiceDesc{
	ServiceName: "rpc.Servicer",
	HandlerType: (*ServicerServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "PollJob",
			Handler:    _Servicer_PollJob_Handler,
		},
		{
			MethodName: "PushStream",
			Handler:    _Servicer_PushStream_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "rpc.proto",
}
